-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity demosaic is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_idata_V_bv_V_dout : IN STD_LOGIC_VECTOR (39 downto 0);
    p_idata_V_bv_V_empty_n : IN STD_LOGIC;
    p_idata_V_bv_V_read : OUT STD_LOGIC;
    p_demosaic_V_bv_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_demosaic_V_bv_V_full_n : IN STD_LOGIC;
    p_demosaic_V_bv_V_write : OUT STD_LOGIC );
end;


architecture behav of demosaic is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_A1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100001";
    constant ap_const_lv8_A1 : STD_LOGIC_VECTOR (7 downto 0) := "10100001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_63 : STD_LOGIC_VECTOR (7 downto 0) := "01100011";
    constant ap_const_lv20_E1000 : STD_LOGIC_VECTOR (19 downto 0) := "11100001000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv20_780 : STD_LOGIC_VECTOR (19 downto 0) := "00000000011110000000";
    constant ap_const_lv40_111112 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000100010001000100010010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv20_E0880 : STD_LOGIC_VECTOR (19 downto 0) := "11100000100010000000";
    constant ap_const_lv20_E087F : STD_LOGIC_VECTOR (19 downto 0) := "11100000100001111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv11_77D : STD_LOGIC_VECTOR (10 downto 0) := "11101111101";
    constant ap_const_lv11_77C : STD_LOGIC_VECTOR (10 downto 0) := "11101111100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv18_12B5F : STD_LOGIC_VECTOR (17 downto 0) := "010010101101011111";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv6_27 : STD_LOGIC_VECTOR (5 downto 0) := "100111";
    constant ap_const_lv40_FFFFFFFFFF : STD_LOGIC_VECTOR (39 downto 0) := "1111111111111111111111111111111111111111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv24_AAB : STD_LOGIC_VECTOR (23 downto 0) := "000000000000101010101011";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_idata_V_bv_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond2_reg_2737 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter16 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal p_24_reg_2948 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_24_reg_2948_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_46_reg_2958 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_46_reg_2958_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_79_reg_3013 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_demosaic_V_bv_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter21 : STD_LOGIC := '0';
    signal exitcond_reg_2877 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_idata_buffer1_it_s_reg_399 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s0_v_reg_411 : STD_LOGIC_VECTOR (19 downto 0);
    signal phi_mul_reg_422 : STD_LOGIC_VECTOR (39 downto 0);
    signal phi_mul1_reg_433 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_4_reg_445 : STD_LOGIC_VECTOR (19 downto 0);
    signal exitcond2_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_idata_buffer1_1_1_fu_471_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_idata_buffer1_1_1_reg_2741 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal p_idata_window_0_v_3_reg_2756 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_0_v_4_reg_2761 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_1_v_3_reg_2766 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_1_v_4_reg_2771 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_3_reg_2776 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_4_reg_2781 : STD_LOGIC_VECTOR (39 downto 0);
    signal exitcond_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter14 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter15 : BOOLEAN;
    signal ap_predicate_op223_read_state21 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter16 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter17 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter18 : BOOLEAN;
    signal ap_block_state24_pp1_stage0_iter19 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter20 : BOOLEAN;
    signal ap_block_state26_pp1_stage0_iter21 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond_reg_2877_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_2877_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s0_v76_fu_615_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal p_s0_v_cast_fu_621_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter1_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter2_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter3_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter4_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter5_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter6_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter7_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter8_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter9_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter10_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter11_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter12_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal p_s0_v_cast_reg_2886_pp1_iter13_reg : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_28_fu_625_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter12_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_28_reg_2891_pp1_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_29_fu_629_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter1_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter4_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter5_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter6_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter7_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter8_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter9_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter10_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter11_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter12_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_reg_2896_pp1_iter13_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_30_fu_633_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter8_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter9_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter10_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter11_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter12_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_30_reg_2902_pp1_iter13_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal idx_urem_fu_655_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal next_mul_fu_663_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_114_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_114_reg_2922_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_fu_737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_140_reg_2930_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_146_reg_2937_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_149_reg_2942_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_24_fu_759_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_24_reg_2948_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_24_reg_2948_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_24_reg_2948_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_24_reg_2948_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal next_mul1_fu_765_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal next_mul1_reg_2953 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal p_46_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_46_reg_2958_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_46_reg_2958_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_46_reg_2958_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_66_fu_911_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_66_reg_2962 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_76_fu_982_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_76_reg_2967 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_103_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_103_reg_2973 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_103_reg_2973_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_103_reg_2973_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_103_reg_2973_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_103_reg_2973_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_103_reg_2973_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_118_fu_1070_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_118_reg_2981 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_118_reg_2981_pp1_iter15_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_118_reg_2981_pp1_iter16_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_118_reg_2981_pp1_iter17_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal p_122_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_reg_2990 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_reg_2990_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_reg_2990_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_reg_2990_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_reg_2990_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_122_reg_2990_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_135_fu_1081_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_135_reg_2997 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_135_reg_2997_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_135_reg_2997_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_135_reg_2997_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_135_reg_2997_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_148_fu_1086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_148_reg_3002 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_148_reg_3002_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_148_reg_3002_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_148_reg_3002_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_148_reg_3002_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_148_reg_3002_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_209_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_209_reg_3008 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_209_reg_3008_pp1_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_209_reg_3008_pp1_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_209_reg_3008_pp1_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_209_reg_3008_pp1_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_209_reg_3008_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_79_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Lo_assign_fu_1292_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal Lo_assign_reg_3027 : STD_LOGIC_VECTOR (4 downto 0);
    signal Lo_assign_reg_3027_pp1_iter19_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal Hi_assign_fu_1308_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal Hi_assign_reg_3033 : STD_LOGIC_VECTOR (5 downto 0);
    signal Hi_assign_reg_3033_pp1_iter19_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_43_fu_1318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_3041 : STD_LOGIC_VECTOR (0 downto 0);
    signal Lo_assign_1_fu_1343_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal Lo_assign_1_reg_3048 : STD_LOGIC_VECTOR (4 downto 0);
    signal Lo_assign_1_reg_3048_pp1_iter19_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal Hi_assign_1_fu_1361_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal Hi_assign_1_reg_3054 : STD_LOGIC_VECTOR (5 downto 0);
    signal Hi_assign_1_reg_3054_pp1_iter19_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal i0_t_cast_fu_1377_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal i0_t_cast_reg_3062 : STD_LOGIC_VECTOR (1 downto 0);
    signal i0_t_cast_reg_3062_pp1_iter19_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_77_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_3068 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_1398_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_3075 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_reg_3075_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal Lo_assign_2_fu_1406_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal Lo_assign_2_reg_3081 : STD_LOGIC_VECTOR (4 downto 0);
    signal Hi_assign_2_fu_1424_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal Hi_assign_2_reg_3087 : STD_LOGIC_VECTOR (5 downto 0);
    signal Hi_assign_2_reg_3087_pp1_iter19_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_94_fu_1434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_reg_3095 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_fu_1440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_reg_3102 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_110_reg_3102_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_135_fu_1508_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_135_reg_3109 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_135_reg_3109_pp1_iter19_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_138_fu_1518_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_138_reg_3114 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_138_reg_3114_pp1_iter19_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_142_fu_1524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_reg_3119 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_142_reg_3119_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_fu_1530_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_reg_3126 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_158_reg_3126_pp1_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp35_fu_1784_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp35_reg_3133 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp35_reg_3133_pp1_iter19_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal p_137_fu_2114_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_137_reg_3138 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_159_fu_2120_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_159_reg_3143 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_162_fu_2123_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_162_reg_3150 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_53_reg_3155 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_reg_3161 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_214_fu_2655_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_214_reg_3168 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter20 : STD_LOGIC := '0';
    signal p_idata_buffer1_0_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_idata_buffer1_0_s_ce0 : STD_LOGIC;
    signal p_idata_buffer1_0_s_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_buffer1_0_s_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_idata_buffer1_0_s_ce1 : STD_LOGIC;
    signal p_idata_buffer1_0_s_we1 : STD_LOGIC;
    signal p_idata_buffer1_0_s_d1 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_buffer1_1_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_idata_buffer1_1_s_ce0 : STD_LOGIC;
    signal p_idata_buffer1_1_s_q0 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_buffer1_1_s_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_idata_buffer1_1_s_ce1 : STD_LOGIC;
    signal p_idata_buffer1_1_s_we1 : STD_LOGIC;
    signal p_idata_buffer1_1_s_d1 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_phi_mux_p_idata_buffer1_it_s_phi_fu_403_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_phi_mul1_phi_fu_437_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_9_fu_483_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_15_fu_1177_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_fu_1182_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_18_fu_1240_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_fu_1245_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal p_idata_window_0_v_2_fu_220 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_0_v_fu_224 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_0_v_1_fu_228 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_1_v_2_fu_232 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_1_v_fu_236 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_1_v_1_fu_240 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_2_fu_244 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_fu_248 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_1_fu_252 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_7_fu_264 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_buffer1_it_2_fu_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_idata_buffer1_0_6_fu_1256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_idata_buffer1_it_1_fu_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_idata_buffer1_1_7_fu_1193_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_idata_window_0_v_7_fu_276 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_0_v_8_fu_280 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_0_v_9_fu_284 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_1_v_7_fu_288 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_1_v_8_fu_292 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_1_v_9_fu_296 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_8_fu_300 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_9_fu_304 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_idata_window_2_v_10_fu_308 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_7_cast_fu_477_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_637_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_637_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_urem_fu_643_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_38_fu_649_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_677_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl9_fu_687_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl_fu_699_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl10_cast_fu_707_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl9_cast_fu_695_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_23_fu_711_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_107_fu_717_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_41_fu_669_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_637_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_31_fu_755_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_fu_2662_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_5_fu_774_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_fu_787_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_35_cast_fu_783_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl1_fu_796_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_804_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_37_fu_810_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_fu_815_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_823_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_44_cast_fu_832_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_17_fu_851_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl2_fu_860_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl3_fu_872_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_cast_fu_880_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl2_cast_fu_868_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_10_fu_884_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_59_fu_890_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_33_fu_895_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_60_cast_fu_903_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_57_cast1_fu_842_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_34_fu_917_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl4_fu_931_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_shl5_fu_943_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl5_cast_fu_951_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_shl4_cast_fu_939_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_12_fu_955_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_69_fu_961_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_35_fu_966_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_70_1_cast_fu_974_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_67_cast_fu_927_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul3_fu_2673_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_20_fu_991_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_fu_1004_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_93_cast_fu_1000_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl8_fu_1013_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_fu_1021_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_95_fu_1027_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_39_fu_1032_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1057_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1040_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_1048_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl6_fu_1100_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_neg1_fu_1107_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl7_fu_1117_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_neg1_cast_fu_1113_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl7_cast_fu_1124_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_13_fu_1128_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_66_cast_fu_1097_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_78_fu_1134_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_36_fu_1167_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_cast_fu_1171_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_idata_buffer1_1_6_fu_1187_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_1230_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_39_cast_fu_1234_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_idata_buffer1_0_5_fu_1250_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal Lo_assign_cast1_fu_1300_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal Lo_assign_cast_fu_1304_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_cast_fu_1314_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_118_cast345_cast_fu_1289_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_124_fu_1324_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_126_fu_1338_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal Lo_assign_1_cast1_fu_1353_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_76_fu_1330_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_s_fu_1371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Lo_assign_1_cast_fu_1357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_1_cast_fu_1367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_130_fu_1387_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_132_fu_1393_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal Lo_assign_2_cast1_fu_1416_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal Lo_assign_2_cast_fu_1420_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Hi_assign_2_cast_fu_1430_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_127_fu_1452_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_126_fu_1446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_129_fu_1466_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_131_fu_1478_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_128_fu_1456_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_130_fu_1472_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_132_fu_1484_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_134_fu_1500_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_133_fu_1492_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_136_fu_1514_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_13_fu_1536_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_Val2_13_fu_1536_p5 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_175_fu_1554_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_174_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_177_fu_1568_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_179_fu_1580_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_176_fu_1558_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_178_fu_1574_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_180_fu_1586_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_182_fu_1602_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_183_fu_1610_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_181_fu_1594_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_184_fu_1616_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_185_fu_1620_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_186_fu_1624_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_187_fu_1630_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_13_fu_1636_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_51_fu_1646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_189_fu_1642_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_162_fu_1650_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_14_fu_1662_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_191_fu_1676_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_190_fu_1670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_193_fu_1690_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_195_fu_1702_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_192_fu_1680_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_194_fu_1696_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_196_fu_1708_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_198_fu_1724_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_199_fu_1732_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_197_fu_1716_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_200_fu_1738_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_201_fu_1742_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_202_fu_1746_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_203_fu_1752_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_14_fu_1758_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_52_fu_1768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_205_fu_1764_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_167_fu_1772_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_167_cast_cast_fu_1780_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_162_cast_cast_fu_1658_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_44_fu_1820_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_46_fu_1833_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_48_fu_1844_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_45_fu_1823_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_47_fu_1838_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_60_fu_1849_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_65_fu_1863_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_66_fu_1870_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_63_fu_1856_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_67_fu_1876_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_70_fu_1880_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_73_fu_1884_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_74_fu_1890_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_8_fu_1902_p5 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_78_fu_1913_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_80_fu_1926_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_82_fu_1937_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_79_fu_1916_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_81_fu_1931_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_83_fu_1942_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_85_fu_1956_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_86_fu_1963_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_84_fu_1949_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_87_fu_1969_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_88_fu_1973_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_89_fu_1977_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_90_fu_1983_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_7_fu_1989_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_92_fu_1995_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_129_fu_1999_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_6_fu_2010_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_95_fu_2017_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_97_fu_2030_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_99_fu_2041_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_96_fu_2020_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_98_fu_2035_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_100_fu_2046_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_102_fu_2060_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_103_fu_2067_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_101_fu_2053_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_104_fu_2073_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_105_fu_2077_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_106_fu_2081_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_107_fu_2087_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_8_fu_2093_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_109_fu_2099_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_136_fu_2103_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_129_cast_fu_2006_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_136_cast_fu_2110_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_s_fu_1896_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_116_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_104_fu_2158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_111_fu_2185_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_113_fu_2198_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_115_fu_2209_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_112_fu_2188_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_114_fu_2203_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_116_fu_2214_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_118_fu_2228_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_119_fu_2235_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_117_fu_2221_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_120_fu_2241_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_121_fu_2245_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_122_fu_2249_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_123_fu_2255_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_9_fu_2261_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_125_fu_2267_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_143_fu_2271_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_137_fu_2282_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_139_fu_2285_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_10_fu_2291_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_141_fu_2296_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_147_fu_2300_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_11_fu_2311_p5 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_143_fu_2322_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_145_fu_2335_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_147_fu_2346_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_144_fu_2325_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_146_fu_2340_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_148_fu_2351_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_150_fu_2365_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_151_fu_2372_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_149_fu_2358_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_152_fu_2378_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_153_fu_2382_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_154_fu_2386_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_155_fu_2392_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_11_fu_2398_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_49_fu_2408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_157_fu_2404_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_153_fu_2412_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_Val2_12_fu_2424_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_161_fu_2441_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_163_fu_2445_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_160_fu_2431_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_164_fu_2449_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_166_fu_2463_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_167_fu_2468_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_165_fu_2456_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_168_fu_2474_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_169_fu_2478_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_170_fu_2482_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_171_fu_2488_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_12_fu_2494_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_50_fu_2504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_173_fu_2500_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_157_fu_2508_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_153_cast_fu_2420_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_157_cast_fu_2516_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_158_fu_2520_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_158_cast_fu_2526_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp35_cast_fu_2530_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_143_cast1_fu_2278_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_147_cast1_fu_2307_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_172_fu_2539_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_137_cast_fu_2177_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp36_cast_fu_2545_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_168_fu_2533_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_138_fu_2180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_fu_2559_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_2569_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_121_fu_2172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_2579_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_24_fu_2168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_2587_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_180_fu_2549_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_182_fu_2555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_2601_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_fu_2611_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_68_fu_2626_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_69_fu_2632_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_64_fu_2618_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_71_fu_2640_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_59_fu_2594_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_72_fu_2648_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_fu_2662_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_fu_2662_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul3_fu_2673_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul3_fu_2673_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_637_ce : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal mul3_fu_2673_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal mul_fu_2662_p00 : STD_LOGIC_VECTOR (23 downto 0);

    component demosaic_root_uredEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component demosaic_root_muxeOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (39 downto 0);
        din2 : IN STD_LOGIC_VECTOR (39 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (39 downto 0) );
    end component;


    component demosaic_root_mulfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component demosaic_root_mulg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component demosaic_p_idata_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (39 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (39 downto 0) );
    end component;



begin
    p_idata_buffer1_0_s_U : component demosaic_p_idata_bkb
    generic map (
        DataWidth => 40,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_idata_buffer1_0_s_address0,
        ce0 => p_idata_buffer1_0_s_ce0,
        q0 => p_idata_buffer1_0_s_q0,
        address1 => p_idata_buffer1_0_s_address1,
        ce1 => p_idata_buffer1_0_s_ce1,
        we1 => p_idata_buffer1_0_s_we1,
        d1 => p_idata_buffer1_0_s_d1);

    p_idata_buffer1_1_s_U : component demosaic_p_idata_bkb
    generic map (
        DataWidth => 40,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_idata_buffer1_1_s_address0,
        ce0 => p_idata_buffer1_1_s_ce0,
        q0 => p_idata_buffer1_1_s_q0,
        address1 => p_idata_buffer1_1_s_address1,
        ce1 => p_idata_buffer1_1_s_ce1,
        we1 => p_idata_buffer1_1_s_we1,
        d1 => p_idata_buffer1_1_s_d1);

    demosaic_root_uredEe_U7 : component demosaic_root_uredEe
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_637_p0,
        din1 => grp_fu_637_p1,
        ce => grp_fu_637_ce,
        dout => grp_fu_637_p2);

    demosaic_root_muxeOg_U8 : component demosaic_root_muxeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => p_idata_window_2_v_10_fu_308,
        din1 => p_idata_window_2_v_9_fu_304,
        din2 => p_idata_window_2_v_8_fu_300,
        din3 => p_Val2_13_fu_1536_p4,
        dout => p_Val2_13_fu_1536_p5);

    demosaic_root_muxeOg_U9 : component demosaic_root_muxeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => p_idata_window_1_v_9_fu_296,
        din1 => p_idata_window_1_v_8_fu_292,
        din2 => p_idata_window_1_v_7_fu_288,
        din3 => i0_t_cast_reg_3062,
        dout => p_Val2_8_fu_1902_p5);

    demosaic_root_muxeOg_U10 : component demosaic_root_muxeOg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        din2_WIDTH => 40,
        din3_WIDTH => 2,
        dout_WIDTH => 40)
    port map (
        din0 => p_idata_window_0_v_9_fu_284,
        din1 => p_idata_window_0_v_8_fu_280,
        din2 => p_idata_window_0_v_7_fu_276,
        din3 => i0_t_cast_reg_3062_pp1_iter19_reg,
        dout => p_Val2_11_fu_2311_p5);

    demosaic_root_mulfYi_U11 : component demosaic_root_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 13,
        dout_WIDTH => 24)
    port map (
        din0 => mul_fu_2662_p0,
        din1 => mul_fu_2662_p1,
        dout => mul_fu_2662_p2);

    demosaic_root_mulg8j_U12 : component demosaic_root_mulg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 11,
        dout_WIDTH => 24)
    port map (
        din0 => mul3_fu_2673_p0,
        din1 => mul3_fu_2673_p1,
        dout => mul3_fu_2673_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond2_fu_465_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state5)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter21 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_4_reg_445_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_4_reg_445 <= ap_const_lv20_0;
            elsif (((exitcond_fu_609_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_4_reg_445 <= idx_urem_fu_655_p3;
            end if; 
        end if;
    end process;

    p_idata_buffer1_it_1_fu_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter16_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter16_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                                p_idata_buffer1_it_1_fu_272(7 downto 0) <= p_idata_buffer1_1_7_fu_1193_p1(7 downto 0);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_buffer1_it_1_fu_272(0) <= '1';
                p_idata_buffer1_it_1_fu_272(1) <= '0';
                p_idata_buffer1_it_1_fu_272(2) <= '0';
                p_idata_buffer1_it_1_fu_272(3) <= '0';
                p_idata_buffer1_it_1_fu_272(4) <= '0';
                p_idata_buffer1_it_1_fu_272(5) <= '1';
                p_idata_buffer1_it_1_fu_272(6) <= '0';
                p_idata_buffer1_it_1_fu_272(7) <= '1';
            end if; 
        end if;
    end process;

    p_idata_buffer1_it_2_fu_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter17_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter17_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                                p_idata_buffer1_it_2_fu_268(7 downto 0) <= p_idata_buffer1_0_6_fu_1256_p1(7 downto 0);
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_buffer1_it_2_fu_268(0) <= '1';
                p_idata_buffer1_it_2_fu_268(1) <= '0';
                p_idata_buffer1_it_2_fu_268(2) <= '0';
                p_idata_buffer1_it_2_fu_268(3) <= '0';
                p_idata_buffer1_it_2_fu_268(4) <= '0';
                p_idata_buffer1_it_2_fu_268(5) <= '1';
                p_idata_buffer1_it_2_fu_268(6) <= '0';
                p_idata_buffer1_it_2_fu_268(7) <= '1';
            end if; 
        end if;
    end process;

    p_idata_buffer1_it_s_reg_399_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_reg_2737 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_idata_buffer1_it_s_reg_399 <= p_idata_buffer1_1_1_reg_2741;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_idata_buffer1_it_s_reg_399 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    p_idata_window_0_v_7_fu_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter18_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter18_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_0_v_7_fu_276 <= p_idata_buffer1_0_s_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_0_v_7_fu_276 <= p_idata_window_0_v_1_fu_228;
            end if; 
        end if;
    end process;

    p_idata_window_0_v_8_fu_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter18_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter18_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_0_v_8_fu_280 <= p_idata_window_0_v_7_fu_276;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_0_v_8_fu_280 <= p_idata_window_0_v_4_reg_2761;
            end if; 
        end if;
    end process;

    p_idata_window_0_v_9_fu_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter18_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter18_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_0_v_9_fu_284 <= p_idata_window_0_v_8_fu_280;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_0_v_9_fu_284 <= p_idata_window_0_v_3_reg_2756;
            end if; 
        end if;
    end process;

    p_idata_window_1_v_7_fu_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter17_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter17_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_1_v_7_fu_288 <= p_idata_buffer1_1_s_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_1_v_7_fu_288 <= p_idata_window_1_v_1_fu_240;
            end if; 
        end if;
    end process;

    p_idata_window_1_v_8_fu_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter17_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter17_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_1_v_8_fu_292 <= p_idata_window_1_v_7_fu_288;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_1_v_8_fu_292 <= p_idata_window_1_v_4_reg_2771;
            end if; 
        end if;
    end process;

    p_idata_window_1_v_9_fu_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter17_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter17_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_1_v_9_fu_296 <= p_idata_window_1_v_8_fu_292;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_1_v_9_fu_296 <= p_idata_window_1_v_3_reg_2766;
            end if; 
        end if;
    end process;

    p_idata_window_2_v_10_fu_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter16_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter16_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_2_v_10_fu_308 <= p_idata_window_2_v_9_fu_304;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_2_v_10_fu_308 <= p_idata_window_2_v_3_reg_2776;
            end if; 
        end if;
    end process;

    p_idata_window_2_v_8_fu_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter16_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter16_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_2_v_8_fu_300 <= p_idata_window_2_v_7_fu_264;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_2_v_8_fu_300 <= p_idata_window_2_v_1_fu_252;
            end if; 
        end if;
    end process;

    p_idata_window_2_v_9_fu_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958_pp1_iter16_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter16_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_idata_window_2_v_9_fu_304 <= p_idata_window_2_v_8_fu_300;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_idata_window_2_v_9_fu_304 <= p_idata_window_2_v_4_reg_2781;
            end if; 
        end if;
    end process;

    p_s0_v_reg_411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_s0_v_reg_411 <= ap_const_lv20_0;
            elsif (((exitcond_fu_609_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_s0_v_reg_411 <= p_s0_v76_fu_615_p2;
            end if; 
        end if;
    end process;

    phi_mul1_reg_433_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_mul1_reg_433 <= ap_const_lv40_0;
            elsif (((exitcond_reg_2877_pp1_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                phi_mul1_reg_433 <= next_mul1_reg_2953;
            end if; 
        end if;
    end process;

    phi_mul_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_mul_reg_422 <= ap_const_lv40_0;
            elsif (((exitcond_fu_609_p2 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                phi_mul_reg_422 <= next_mul_fu_663_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_2877_pp1_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    Hi_assign_1_reg_3054(5 downto 1) <= Hi_assign_1_fu_1361_p2(5 downto 1);
                    Hi_assign_2_reg_3087(5 downto 1) <= Hi_assign_2_fu_1424_p2(5 downto 1);
                    Hi_assign_reg_3033(5 downto 1) <= Hi_assign_fu_1308_p2(5 downto 1);
                    Lo_assign_1_reg_3048(4 downto 1) <= Lo_assign_1_fu_1343_p4(4 downto 1);
                    Lo_assign_2_reg_3081(4 downto 1) <= Lo_assign_2_fu_1406_p4(4 downto 1);
                    Lo_assign_reg_3027(4 downto 1) <= Lo_assign_fu_1292_p4(4 downto 1);
                    i0_t_cast_reg_3062(0) <= i0_t_cast_fu_1377_p1(0);
                tmp35_reg_3133 <= tmp35_fu_1784_p2;
                tmp_142_reg_3119 <= tmp_142_fu_1524_p2;
                tmp_158_reg_3126 <= tmp_158_fu_1530_p2;
                tmp_43_reg_3041 <= tmp_43_fu_1318_p2;
                tmp_93_reg_3075 <= p_130_fu_1387_p2(2 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                    Hi_assign_1_reg_3054_pp1_iter19_reg(5 downto 1) <= Hi_assign_1_reg_3054(5 downto 1);
                    Hi_assign_2_reg_3087_pp1_iter19_reg(5 downto 1) <= Hi_assign_2_reg_3087(5 downto 1);
                    Hi_assign_reg_3033_pp1_iter19_reg(5 downto 1) <= Hi_assign_reg_3033(5 downto 1);
                    Lo_assign_1_reg_3048_pp1_iter19_reg(4 downto 1) <= Lo_assign_1_reg_3048(4 downto 1);
                    Lo_assign_reg_3027_pp1_iter19_reg(4 downto 1) <= Lo_assign_reg_3027(4 downto 1);
                exitcond_reg_2877_pp1_iter10_reg <= exitcond_reg_2877_pp1_iter9_reg;
                exitcond_reg_2877_pp1_iter11_reg <= exitcond_reg_2877_pp1_iter10_reg;
                exitcond_reg_2877_pp1_iter12_reg <= exitcond_reg_2877_pp1_iter11_reg;
                exitcond_reg_2877_pp1_iter13_reg <= exitcond_reg_2877_pp1_iter12_reg;
                exitcond_reg_2877_pp1_iter14_reg <= exitcond_reg_2877_pp1_iter13_reg;
                exitcond_reg_2877_pp1_iter15_reg <= exitcond_reg_2877_pp1_iter14_reg;
                exitcond_reg_2877_pp1_iter16_reg <= exitcond_reg_2877_pp1_iter15_reg;
                exitcond_reg_2877_pp1_iter17_reg <= exitcond_reg_2877_pp1_iter16_reg;
                exitcond_reg_2877_pp1_iter18_reg <= exitcond_reg_2877_pp1_iter17_reg;
                exitcond_reg_2877_pp1_iter19_reg <= exitcond_reg_2877_pp1_iter18_reg;
                exitcond_reg_2877_pp1_iter20_reg <= exitcond_reg_2877_pp1_iter19_reg;
                exitcond_reg_2877_pp1_iter2_reg <= exitcond_reg_2877_pp1_iter1_reg;
                exitcond_reg_2877_pp1_iter3_reg <= exitcond_reg_2877_pp1_iter2_reg;
                exitcond_reg_2877_pp1_iter4_reg <= exitcond_reg_2877_pp1_iter3_reg;
                exitcond_reg_2877_pp1_iter5_reg <= exitcond_reg_2877_pp1_iter4_reg;
                exitcond_reg_2877_pp1_iter6_reg <= exitcond_reg_2877_pp1_iter5_reg;
                exitcond_reg_2877_pp1_iter7_reg <= exitcond_reg_2877_pp1_iter6_reg;
                exitcond_reg_2877_pp1_iter8_reg <= exitcond_reg_2877_pp1_iter7_reg;
                exitcond_reg_2877_pp1_iter9_reg <= exitcond_reg_2877_pp1_iter8_reg;
                    i0_t_cast_reg_3062_pp1_iter19_reg(0) <= i0_t_cast_reg_3062(0);
                p_103_reg_2973_pp1_iter15_reg <= p_103_reg_2973;
                p_103_reg_2973_pp1_iter16_reg <= p_103_reg_2973_pp1_iter15_reg;
                p_103_reg_2973_pp1_iter17_reg <= p_103_reg_2973_pp1_iter16_reg;
                p_103_reg_2973_pp1_iter18_reg <= p_103_reg_2973_pp1_iter17_reg;
                p_103_reg_2973_pp1_iter19_reg <= p_103_reg_2973_pp1_iter18_reg;
                p_114_reg_2922_pp1_iter10_reg <= p_114_reg_2922_pp1_iter9_reg;
                p_114_reg_2922_pp1_iter11_reg <= p_114_reg_2922_pp1_iter10_reg;
                p_114_reg_2922_pp1_iter12_reg <= p_114_reg_2922_pp1_iter11_reg;
                p_114_reg_2922_pp1_iter13_reg <= p_114_reg_2922_pp1_iter12_reg;
                p_114_reg_2922_pp1_iter14_reg <= p_114_reg_2922_pp1_iter13_reg;
                p_114_reg_2922_pp1_iter15_reg <= p_114_reg_2922_pp1_iter14_reg;
                p_114_reg_2922_pp1_iter16_reg <= p_114_reg_2922_pp1_iter15_reg;
                p_114_reg_2922_pp1_iter17_reg <= p_114_reg_2922_pp1_iter16_reg;
                p_114_reg_2922_pp1_iter18_reg <= p_114_reg_2922_pp1_iter17_reg;
                p_114_reg_2922_pp1_iter19_reg <= p_114_reg_2922_pp1_iter18_reg;
                p_114_reg_2922_pp1_iter2_reg <= p_114_reg_2922_pp1_iter1_reg;
                p_114_reg_2922_pp1_iter3_reg <= p_114_reg_2922_pp1_iter2_reg;
                p_114_reg_2922_pp1_iter4_reg <= p_114_reg_2922_pp1_iter3_reg;
                p_114_reg_2922_pp1_iter5_reg <= p_114_reg_2922_pp1_iter4_reg;
                p_114_reg_2922_pp1_iter6_reg <= p_114_reg_2922_pp1_iter5_reg;
                p_114_reg_2922_pp1_iter7_reg <= p_114_reg_2922_pp1_iter6_reg;
                p_114_reg_2922_pp1_iter8_reg <= p_114_reg_2922_pp1_iter7_reg;
                p_114_reg_2922_pp1_iter9_reg <= p_114_reg_2922_pp1_iter8_reg;
                p_118_reg_2981_pp1_iter15_reg <= p_118_reg_2981;
                p_118_reg_2981_pp1_iter16_reg <= p_118_reg_2981_pp1_iter15_reg;
                p_118_reg_2981_pp1_iter17_reg <= p_118_reg_2981_pp1_iter16_reg;
                p_122_reg_2990_pp1_iter15_reg <= p_122_reg_2990;
                p_122_reg_2990_pp1_iter16_reg <= p_122_reg_2990_pp1_iter15_reg;
                p_122_reg_2990_pp1_iter17_reg <= p_122_reg_2990_pp1_iter16_reg;
                p_122_reg_2990_pp1_iter18_reg <= p_122_reg_2990_pp1_iter17_reg;
                p_122_reg_2990_pp1_iter19_reg <= p_122_reg_2990_pp1_iter18_reg;
                p_135_reg_2997_pp1_iter15_reg <= p_135_reg_2997;
                p_135_reg_2997_pp1_iter16_reg <= p_135_reg_2997_pp1_iter15_reg;
                p_135_reg_2997_pp1_iter17_reg <= p_135_reg_2997_pp1_iter16_reg;
                p_135_reg_2997_pp1_iter18_reg <= p_135_reg_2997_pp1_iter17_reg;
                p_140_reg_2930_pp1_iter10_reg <= p_140_reg_2930_pp1_iter9_reg;
                p_140_reg_2930_pp1_iter11_reg <= p_140_reg_2930_pp1_iter10_reg;
                p_140_reg_2930_pp1_iter12_reg <= p_140_reg_2930_pp1_iter11_reg;
                p_140_reg_2930_pp1_iter13_reg <= p_140_reg_2930_pp1_iter12_reg;
                p_140_reg_2930_pp1_iter14_reg <= p_140_reg_2930_pp1_iter13_reg;
                p_140_reg_2930_pp1_iter15_reg <= p_140_reg_2930_pp1_iter14_reg;
                p_140_reg_2930_pp1_iter16_reg <= p_140_reg_2930_pp1_iter15_reg;
                p_140_reg_2930_pp1_iter17_reg <= p_140_reg_2930_pp1_iter16_reg;
                p_140_reg_2930_pp1_iter18_reg <= p_140_reg_2930_pp1_iter17_reg;
                p_140_reg_2930_pp1_iter19_reg <= p_140_reg_2930_pp1_iter18_reg;
                p_140_reg_2930_pp1_iter2_reg <= p_140_reg_2930_pp1_iter1_reg;
                p_140_reg_2930_pp1_iter3_reg <= p_140_reg_2930_pp1_iter2_reg;
                p_140_reg_2930_pp1_iter4_reg <= p_140_reg_2930_pp1_iter3_reg;
                p_140_reg_2930_pp1_iter5_reg <= p_140_reg_2930_pp1_iter4_reg;
                p_140_reg_2930_pp1_iter6_reg <= p_140_reg_2930_pp1_iter5_reg;
                p_140_reg_2930_pp1_iter7_reg <= p_140_reg_2930_pp1_iter6_reg;
                p_140_reg_2930_pp1_iter8_reg <= p_140_reg_2930_pp1_iter7_reg;
                p_140_reg_2930_pp1_iter9_reg <= p_140_reg_2930_pp1_iter8_reg;
                p_146_reg_2937_pp1_iter10_reg <= p_146_reg_2937_pp1_iter9_reg;
                p_146_reg_2937_pp1_iter11_reg <= p_146_reg_2937_pp1_iter10_reg;
                p_146_reg_2937_pp1_iter12_reg <= p_146_reg_2937_pp1_iter11_reg;
                p_146_reg_2937_pp1_iter13_reg <= p_146_reg_2937_pp1_iter12_reg;
                p_146_reg_2937_pp1_iter14_reg <= p_146_reg_2937_pp1_iter13_reg;
                p_146_reg_2937_pp1_iter15_reg <= p_146_reg_2937_pp1_iter14_reg;
                p_146_reg_2937_pp1_iter16_reg <= p_146_reg_2937_pp1_iter15_reg;
                p_146_reg_2937_pp1_iter17_reg <= p_146_reg_2937_pp1_iter16_reg;
                p_146_reg_2937_pp1_iter18_reg <= p_146_reg_2937_pp1_iter17_reg;
                p_146_reg_2937_pp1_iter19_reg <= p_146_reg_2937_pp1_iter18_reg;
                p_146_reg_2937_pp1_iter2_reg <= p_146_reg_2937_pp1_iter1_reg;
                p_146_reg_2937_pp1_iter3_reg <= p_146_reg_2937_pp1_iter2_reg;
                p_146_reg_2937_pp1_iter4_reg <= p_146_reg_2937_pp1_iter3_reg;
                p_146_reg_2937_pp1_iter5_reg <= p_146_reg_2937_pp1_iter4_reg;
                p_146_reg_2937_pp1_iter6_reg <= p_146_reg_2937_pp1_iter5_reg;
                p_146_reg_2937_pp1_iter7_reg <= p_146_reg_2937_pp1_iter6_reg;
                p_146_reg_2937_pp1_iter8_reg <= p_146_reg_2937_pp1_iter7_reg;
                p_146_reg_2937_pp1_iter9_reg <= p_146_reg_2937_pp1_iter8_reg;
                p_148_reg_3002_pp1_iter15_reg <= p_148_reg_3002;
                p_148_reg_3002_pp1_iter16_reg <= p_148_reg_3002_pp1_iter15_reg;
                p_148_reg_3002_pp1_iter17_reg <= p_148_reg_3002_pp1_iter16_reg;
                p_148_reg_3002_pp1_iter18_reg <= p_148_reg_3002_pp1_iter17_reg;
                p_148_reg_3002_pp1_iter19_reg <= p_148_reg_3002_pp1_iter18_reg;
                p_149_reg_2942_pp1_iter10_reg <= p_149_reg_2942_pp1_iter9_reg;
                p_149_reg_2942_pp1_iter11_reg <= p_149_reg_2942_pp1_iter10_reg;
                p_149_reg_2942_pp1_iter12_reg <= p_149_reg_2942_pp1_iter11_reg;
                p_149_reg_2942_pp1_iter13_reg <= p_149_reg_2942_pp1_iter12_reg;
                p_149_reg_2942_pp1_iter14_reg <= p_149_reg_2942_pp1_iter13_reg;
                p_149_reg_2942_pp1_iter15_reg <= p_149_reg_2942_pp1_iter14_reg;
                p_149_reg_2942_pp1_iter16_reg <= p_149_reg_2942_pp1_iter15_reg;
                p_149_reg_2942_pp1_iter17_reg <= p_149_reg_2942_pp1_iter16_reg;
                p_149_reg_2942_pp1_iter2_reg <= p_149_reg_2942_pp1_iter1_reg;
                p_149_reg_2942_pp1_iter3_reg <= p_149_reg_2942_pp1_iter2_reg;
                p_149_reg_2942_pp1_iter4_reg <= p_149_reg_2942_pp1_iter3_reg;
                p_149_reg_2942_pp1_iter5_reg <= p_149_reg_2942_pp1_iter4_reg;
                p_149_reg_2942_pp1_iter6_reg <= p_149_reg_2942_pp1_iter5_reg;
                p_149_reg_2942_pp1_iter7_reg <= p_149_reg_2942_pp1_iter6_reg;
                p_149_reg_2942_pp1_iter8_reg <= p_149_reg_2942_pp1_iter7_reg;
                p_149_reg_2942_pp1_iter9_reg <= p_149_reg_2942_pp1_iter8_reg;
                p_209_reg_3008_pp1_iter15_reg <= p_209_reg_3008;
                p_209_reg_3008_pp1_iter16_reg <= p_209_reg_3008_pp1_iter15_reg;
                p_209_reg_3008_pp1_iter17_reg <= p_209_reg_3008_pp1_iter16_reg;
                p_209_reg_3008_pp1_iter18_reg <= p_209_reg_3008_pp1_iter17_reg;
                p_209_reg_3008_pp1_iter19_reg <= p_209_reg_3008_pp1_iter18_reg;
                p_24_reg_2948_pp1_iter15_reg <= p_24_reg_2948;
                p_24_reg_2948_pp1_iter16_reg <= p_24_reg_2948_pp1_iter15_reg;
                p_24_reg_2948_pp1_iter17_reg <= p_24_reg_2948_pp1_iter16_reg;
                p_24_reg_2948_pp1_iter18_reg <= p_24_reg_2948_pp1_iter17_reg;
                p_24_reg_2948_pp1_iter19_reg <= p_24_reg_2948_pp1_iter18_reg;
                p_46_reg_2958_pp1_iter15_reg <= p_46_reg_2958;
                p_46_reg_2958_pp1_iter16_reg <= p_46_reg_2958_pp1_iter15_reg;
                p_46_reg_2958_pp1_iter17_reg <= p_46_reg_2958_pp1_iter16_reg;
                p_46_reg_2958_pp1_iter18_reg <= p_46_reg_2958_pp1_iter17_reg;
                    p_s0_v_cast_reg_2886_pp1_iter10_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter9_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter11_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter10_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter12_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter11_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter13_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter12_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter2_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter1_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter3_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter2_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter4_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter3_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter5_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter4_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter6_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter5_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter7_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter6_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter8_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter7_reg(19 downto 0);
                    p_s0_v_cast_reg_2886_pp1_iter9_reg(19 downto 0) <= p_s0_v_cast_reg_2886_pp1_iter8_reg(19 downto 0);
                tmp35_reg_3133_pp1_iter19_reg <= tmp35_reg_3133;
                tmp_110_reg_3102_pp1_iter19_reg <= tmp_110_reg_3102;
                    tmp_135_reg_3109_pp1_iter19_reg(5 downto 1) <= tmp_135_reg_3109(5 downto 1);
                tmp_138_reg_3114_pp1_iter19_reg <= tmp_138_reg_3114;
                tmp_142_reg_3119_pp1_iter19_reg <= tmp_142_reg_3119;
                tmp_158_reg_3126_pp1_iter19_reg <= tmp_158_reg_3126;
                tmp_28_reg_2891_pp1_iter10_reg <= tmp_28_reg_2891_pp1_iter9_reg;
                tmp_28_reg_2891_pp1_iter11_reg <= tmp_28_reg_2891_pp1_iter10_reg;
                tmp_28_reg_2891_pp1_iter12_reg <= tmp_28_reg_2891_pp1_iter11_reg;
                tmp_28_reg_2891_pp1_iter13_reg <= tmp_28_reg_2891_pp1_iter12_reg;
                tmp_28_reg_2891_pp1_iter2_reg <= tmp_28_reg_2891_pp1_iter1_reg;
                tmp_28_reg_2891_pp1_iter3_reg <= tmp_28_reg_2891_pp1_iter2_reg;
                tmp_28_reg_2891_pp1_iter4_reg <= tmp_28_reg_2891_pp1_iter3_reg;
                tmp_28_reg_2891_pp1_iter5_reg <= tmp_28_reg_2891_pp1_iter4_reg;
                tmp_28_reg_2891_pp1_iter6_reg <= tmp_28_reg_2891_pp1_iter5_reg;
                tmp_28_reg_2891_pp1_iter7_reg <= tmp_28_reg_2891_pp1_iter6_reg;
                tmp_28_reg_2891_pp1_iter8_reg <= tmp_28_reg_2891_pp1_iter7_reg;
                tmp_28_reg_2891_pp1_iter9_reg <= tmp_28_reg_2891_pp1_iter8_reg;
                tmp_29_reg_2896_pp1_iter10_reg <= tmp_29_reg_2896_pp1_iter9_reg;
                tmp_29_reg_2896_pp1_iter11_reg <= tmp_29_reg_2896_pp1_iter10_reg;
                tmp_29_reg_2896_pp1_iter12_reg <= tmp_29_reg_2896_pp1_iter11_reg;
                tmp_29_reg_2896_pp1_iter13_reg <= tmp_29_reg_2896_pp1_iter12_reg;
                tmp_29_reg_2896_pp1_iter2_reg <= tmp_29_reg_2896_pp1_iter1_reg;
                tmp_29_reg_2896_pp1_iter3_reg <= tmp_29_reg_2896_pp1_iter2_reg;
                tmp_29_reg_2896_pp1_iter4_reg <= tmp_29_reg_2896_pp1_iter3_reg;
                tmp_29_reg_2896_pp1_iter5_reg <= tmp_29_reg_2896_pp1_iter4_reg;
                tmp_29_reg_2896_pp1_iter6_reg <= tmp_29_reg_2896_pp1_iter5_reg;
                tmp_29_reg_2896_pp1_iter7_reg <= tmp_29_reg_2896_pp1_iter6_reg;
                tmp_29_reg_2896_pp1_iter8_reg <= tmp_29_reg_2896_pp1_iter7_reg;
                tmp_29_reg_2896_pp1_iter9_reg <= tmp_29_reg_2896_pp1_iter8_reg;
                tmp_30_reg_2902_pp1_iter10_reg <= tmp_30_reg_2902_pp1_iter9_reg;
                tmp_30_reg_2902_pp1_iter11_reg <= tmp_30_reg_2902_pp1_iter10_reg;
                tmp_30_reg_2902_pp1_iter12_reg <= tmp_30_reg_2902_pp1_iter11_reg;
                tmp_30_reg_2902_pp1_iter13_reg <= tmp_30_reg_2902_pp1_iter12_reg;
                tmp_30_reg_2902_pp1_iter2_reg <= tmp_30_reg_2902_pp1_iter1_reg;
                tmp_30_reg_2902_pp1_iter3_reg <= tmp_30_reg_2902_pp1_iter2_reg;
                tmp_30_reg_2902_pp1_iter4_reg <= tmp_30_reg_2902_pp1_iter3_reg;
                tmp_30_reg_2902_pp1_iter5_reg <= tmp_30_reg_2902_pp1_iter4_reg;
                tmp_30_reg_2902_pp1_iter6_reg <= tmp_30_reg_2902_pp1_iter5_reg;
                tmp_30_reg_2902_pp1_iter7_reg <= tmp_30_reg_2902_pp1_iter6_reg;
                tmp_30_reg_2902_pp1_iter8_reg <= tmp_30_reg_2902_pp1_iter7_reg;
                tmp_30_reg_2902_pp1_iter9_reg <= tmp_30_reg_2902_pp1_iter8_reg;
                tmp_93_reg_3075_pp1_iter19_reg <= tmp_93_reg_3075;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond2_reg_2737 <= exitcond2_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_reg_2877 <= exitcond_fu_609_p2;
                exitcond_reg_2877_pp1_iter1_reg <= exitcond_reg_2877;
                p_114_reg_2922_pp1_iter1_reg <= p_114_reg_2922;
                p_140_reg_2930_pp1_iter1_reg <= p_140_reg_2930;
                p_146_reg_2937_pp1_iter1_reg <= p_146_reg_2937;
                p_149_reg_2942_pp1_iter1_reg <= p_149_reg_2942;
                    p_s0_v_cast_reg_2886_pp1_iter1_reg(19 downto 0) <= p_s0_v_cast_reg_2886(19 downto 0);
                tmp_28_reg_2891_pp1_iter1_reg <= tmp_28_reg_2891;
                tmp_29_reg_2896_pp1_iter1_reg <= tmp_29_reg_2896;
                tmp_30_reg_2902_pp1_iter1_reg <= tmp_30_reg_2902;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_2877_pp1_iter13_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                next_mul1_reg_2953 <= next_mul1_fu_765_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_2877_pp1_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_103_reg_2973 <= p_103_fu_1064_p2;
                p_118_reg_2981 <= p_118_fu_1070_p2;
                p_122_reg_2990 <= p_122_fu_1076_p2;
                p_135_reg_2997 <= p_135_fu_1081_p2;
                p_148_reg_3002 <= p_148_fu_1086_p2;
                p_209_reg_3008 <= p_209_fu_1091_p2;
                p_24_reg_2948 <= p_24_fu_759_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_609_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_114_reg_2922 <= p_114_fu_731_p2;
                p_140_reg_2930 <= p_140_fu_737_p2;
                p_146_reg_2937 <= p_146_fu_743_p2;
                p_149_reg_2942 <= p_149_fu_749_p2;
                    p_s0_v_cast_reg_2886(19 downto 0) <= p_s0_v_cast_fu_621_p1(19 downto 0);
                tmp_28_reg_2891 <= tmp_28_fu_625_p1;
                tmp_29_reg_2896 <= tmp_29_fu_629_p1;
                tmp_30_reg_2902 <= tmp_30_fu_633_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_2877_pp1_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_137_reg_3138 <= p_137_fu_2114_p2;
                    tmp_159_reg_3143(4 downto 1) <= tmp_159_fu_2120_p1(4 downto 1);
                tmp_53_reg_3155 <= p_137_fu_2114_p2(10 downto 3);
                tmp_58_reg_3161 <= p_Result_s_fu_1896_p2(9 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_reg_2877_pp1_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_214_reg_3168 <= p_214_fu_2655_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_24_fu_759_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_46_reg_2958 <= p_46_fu_836_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_fu_836_p2 = ap_const_lv1_1) and (p_24_fu_759_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_66_reg_2962 <= p_66_fu_911_p2;
                p_76_reg_2967 <= p_76_fu_982_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_46_reg_2958 = ap_const_lv1_1) and (p_24_reg_2948 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_79_reg_3013 <= p_79_fu_1140_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_idata_buffer1_1_1_reg_2741 <= p_idata_buffer1_1_1_fu_471_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_reg_2737 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_idata_window_0_v_1_fu_228 <= p_idata_buffer1_0_s_q0;
                p_idata_window_1_v_1_fu_240 <= p_idata_buffer1_1_s_q0;
                p_idata_window_2_v_1_fu_252 <= p_idata_V_bv_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_idata_window_0_v_2_fu_220 <= p_idata_window_0_v_fu_224;
                p_idata_window_0_v_3_reg_2756 <= p_idata_window_0_v_2_fu_220;
                p_idata_window_0_v_4_reg_2761 <= p_idata_window_0_v_fu_224;
                p_idata_window_0_v_fu_224 <= p_idata_window_0_v_1_fu_228;
                p_idata_window_1_v_2_fu_232 <= p_idata_window_1_v_fu_236;
                p_idata_window_1_v_3_reg_2766 <= p_idata_window_1_v_2_fu_232;
                p_idata_window_1_v_4_reg_2771 <= p_idata_window_1_v_fu_236;
                p_idata_window_1_v_fu_236 <= p_idata_window_1_v_1_fu_240;
                p_idata_window_2_v_2_fu_244 <= p_idata_window_2_v_fu_248;
                p_idata_window_2_v_3_reg_2776 <= p_idata_window_2_v_2_fu_244;
                p_idata_window_2_v_4_reg_2781 <= p_idata_window_2_v_fu_248;
                p_idata_window_2_v_fu_248 <= p_idata_window_2_v_1_fu_252;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op223_read_state21 = ap_const_boolean_1))) then
                p_idata_window_2_v_7_fu_264 <= p_idata_V_bv_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_140_reg_2930_pp1_iter17_reg = ap_const_lv1_0) and (exitcond_reg_2877_pp1_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_110_reg_3102 <= tmp_110_fu_1440_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_146_reg_2937_pp1_iter17_reg = ap_const_lv1_1) and (exitcond_reg_2877_pp1_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    tmp_135_reg_3109(5 downto 1) <= tmp_135_fu_1508_p2(5 downto 1);
                tmp_138_reg_3114 <= tmp_138_fu_1518_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_158_reg_3126 = ap_const_lv1_1) and (exitcond_reg_2877_pp1_iter18_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    tmp_162_reg_3150(5 downto 1) <= tmp_162_fu_2123_p2(5 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_122_reg_2990_pp1_iter17_reg = ap_const_lv1_0) and (exitcond_reg_2877_pp1_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_77_reg_3068 <= tmp_77_fu_1381_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((p_135_reg_2997_pp1_iter17_reg = ap_const_lv1_1) and (exitcond_reg_2877_pp1_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                tmp_94_reg_3095 <= tmp_94_fu_1434_p2;
            end if;
        end if;
    end process;
    p_s0_v_cast_reg_2886(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter1_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter2_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter3_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter4_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter5_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter6_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter7_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter8_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter9_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter10_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter11_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter12_reg(20) <= '0';
    p_s0_v_cast_reg_2886_pp1_iter13_reg(20) <= '0';
    Lo_assign_reg_3027(0) <= '0';
    Lo_assign_reg_3027_pp1_iter19_reg(0) <= '0';
    Hi_assign_reg_3033(0) <= '1';
    Hi_assign_reg_3033_pp1_iter19_reg(0) <= '1';
    Lo_assign_1_reg_3048(0) <= '0';
    Lo_assign_1_reg_3048_pp1_iter19_reg(0) <= '0';
    Hi_assign_1_reg_3054(0) <= '1';
    Hi_assign_1_reg_3054_pp1_iter19_reg(0) <= '1';
    i0_t_cast_reg_3062(1) <= '0';
    i0_t_cast_reg_3062_pp1_iter19_reg(1) <= '0';
    Lo_assign_2_reg_3081(0) <= '0';
    Hi_assign_2_reg_3087(0) <= '1';
    Hi_assign_2_reg_3087_pp1_iter19_reg(0) <= '1';
    tmp_135_reg_3109(0) <= '0';
    tmp_135_reg_3109_pp1_iter19_reg(0) <= '0';
    tmp_159_reg_3143(0) <= '0';
    tmp_159_reg_3143(5) <= '0';
    tmp_162_reg_3150(0) <= '1';
    p_idata_buffer1_it_2_fu_268(31 downto 8) <= "000000000000000000000000";
    p_idata_buffer1_it_1_fu_272(31 downto 8) <= "000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter21, ap_enable_reg_pp0_iter0, exitcond_fu_609_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter20)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((exitcond_fu_609_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1)) or ((exitcond_fu_609_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    Hi_assign_1_cast_fu_1367_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Hi_assign_1_fu_1361_p2),32));
    Hi_assign_1_fu_1361_p2 <= std_logic_vector(unsigned(ap_const_lv6_9) + unsigned(Lo_assign_1_cast1_fu_1353_p1));
    Hi_assign_2_cast_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Hi_assign_2_fu_1424_p2),32));
    Hi_assign_2_fu_1424_p2 <= std_logic_vector(unsigned(ap_const_lv6_9) + unsigned(Lo_assign_2_cast1_fu_1416_p1));
    Hi_assign_cast_fu_1314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Hi_assign_fu_1308_p2),32));
    Hi_assign_fu_1308_p2 <= std_logic_vector(unsigned(ap_const_lv6_9) + unsigned(Lo_assign_cast1_fu_1300_p1));
    Lo_assign_1_cast1_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_1_fu_1343_p4),6));
    Lo_assign_1_cast_fu_1357_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_1_fu_1343_p4),32));
    Lo_assign_1_fu_1343_p4 <= ((p_126_fu_1338_p2 & p_126_fu_1338_p2) & ap_const_lv1_0);
    Lo_assign_2_cast1_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_2_fu_1406_p4),6));
    Lo_assign_2_cast_fu_1420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_2_fu_1406_p4),32));
    Lo_assign_2_fu_1406_p4 <= ((p_132_fu_1393_p2 & p_132_fu_1393_p2) & ap_const_lv1_0);
    Lo_assign_cast1_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_fu_1292_p4),6));
    Lo_assign_cast_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_fu_1292_p4),32));
    Lo_assign_fu_1292_p4 <= ((p_118_reg_2981_pp1_iter17_reg & p_118_reg_2981_pp1_iter17_reg) & ap_const_lv1_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state27 <= ap_CS_fsm(4);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_idata_V_bv_V_empty_n, ap_enable_reg_pp0_iter1, exitcond2_reg_2737)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond2_reg_2737 = ap_const_lv1_0) and (p_idata_V_bv_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_idata_V_bv_V_empty_n, ap_enable_reg_pp0_iter1, exitcond2_reg_2737)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond2_reg_2737 = ap_const_lv1_0) and (p_idata_V_bv_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_idata_V_bv_V_empty_n, p_demosaic_V_bv_V_full_n, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter21, exitcond_reg_2877_pp1_iter20_reg, ap_predicate_op223_read_state21)
    begin
                ap_block_pp1_stage0_01001 <= (((exitcond_reg_2877_pp1_iter20_reg = ap_const_lv1_0) and (p_demosaic_V_bv_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1)) or ((p_idata_V_bv_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_predicate_op223_read_state21 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_idata_V_bv_V_empty_n, p_demosaic_V_bv_V_full_n, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter21, exitcond_reg_2877_pp1_iter20_reg, ap_predicate_op223_read_state21)
    begin
                ap_block_pp1_stage0_11001 <= (((exitcond_reg_2877_pp1_iter20_reg = ap_const_lv1_0) and (p_demosaic_V_bv_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1)) or ((p_idata_V_bv_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_predicate_op223_read_state21 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_idata_V_bv_V_empty_n, p_demosaic_V_bv_V_full_n, ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter21, exitcond_reg_2877_pp1_iter20_reg, ap_predicate_op223_read_state21)
    begin
                ap_block_pp1_stage0_subdone <= (((exitcond_reg_2877_pp1_iter20_reg = ap_const_lv1_0) and (p_demosaic_V_bv_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1)) or ((p_idata_V_bv_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_predicate_op223_read_state21 = ap_const_boolean_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_pp1_stage0_iter16_assign_proc : process(p_idata_V_bv_V_empty_n, ap_predicate_op223_read_state21)
    begin
                ap_block_state21_pp1_stage0_iter16 <= ((p_idata_V_bv_V_empty_n = ap_const_logic_0) and (ap_predicate_op223_read_state21 = ap_const_boolean_1));
    end process;

        ap_block_state22_pp1_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state26_pp1_stage0_iter21_assign_proc : process(p_demosaic_V_bv_V_full_n, exitcond_reg_2877_pp1_iter20_reg)
    begin
                ap_block_state26_pp1_stage0_iter21 <= ((exitcond_reg_2877_pp1_iter20_reg = ap_const_lv1_0) and (p_demosaic_V_bv_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(p_idata_V_bv_V_empty_n, exitcond2_reg_2737)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((exitcond2_reg_2737 = ap_const_lv1_0) and (p_idata_V_bv_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter0_state5_assign_proc : process(exitcond_fu_609_p2)
    begin
        if ((exitcond_fu_609_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter16, ap_enable_reg_pp1_iter21, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter14, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter17, ap_enable_reg_pp1_iter18, ap_enable_reg_pp1_iter19, ap_enable_reg_pp1_iter20)
    begin
        if (((ap_enable_reg_pp1_iter21 = ap_const_logic_0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_0) and (ap_enable_reg_pp1_iter20 = ap_const_logic_0) and (ap_enable_reg_pp1_iter19 = ap_const_logic_0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_idata_buffer1_it_s_phi_fu_403_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond2_reg_2737, p_idata_buffer1_it_s_reg_399, p_idata_buffer1_1_1_reg_2741)
    begin
        if (((exitcond2_reg_2737 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_p_idata_buffer1_it_s_phi_fu_403_p4 <= p_idata_buffer1_1_1_reg_2741;
        else 
            ap_phi_mux_p_idata_buffer1_it_s_phi_fu_403_p4 <= p_idata_buffer1_it_s_reg_399;
        end if; 
    end process;


    ap_phi_mux_phi_mul1_phi_fu_437_p4_assign_proc : process(ap_block_pp1_stage0, phi_mul1_reg_433, exitcond_reg_2877_pp1_iter14_reg, next_mul1_reg_2953, ap_enable_reg_pp1_iter15)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_reg_2877_pp1_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1))) then 
            ap_phi_mux_phi_mul1_phi_fu_437_p4 <= next_mul1_reg_2953;
        else 
            ap_phi_mux_phi_mul1_phi_fu_437_p4 <= phi_mul1_reg_433;
        end if; 
    end process;


    ap_predicate_op223_read_state21_assign_proc : process(p_24_reg_2948_pp1_iter15_reg, p_46_reg_2958_pp1_iter15_reg, p_79_reg_3013)
    begin
                ap_predicate_op223_read_state21 <= ((p_79_reg_3013 = ap_const_lv1_1) and (p_46_reg_2958_pp1_iter15_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter15_reg = ap_const_lv1_1));
    end process;

    ap_ready <= internal_ap_ready;
    exitcond2_fu_465_p2 <= "1" when (ap_phi_mux_p_idata_buffer1_it_s_phi_fu_403_p4 = ap_const_lv8_A1) else "0";
    exitcond_fu_609_p2 <= "1" when (p_s0_v_reg_411 = ap_const_lv20_E1000) else "0";

    grp_fu_637_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_637_ce <= ap_const_logic_1;
        else 
            grp_fu_637_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_637_p0 <= p_4_reg_445(11 - 1 downto 0);
    grp_fu_637_p1 <= ap_const_lv11_3(3 - 1 downto 0);
    i0_t_cast_fu_1377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_s_fu_1371_p2),2));
    idx_urem_fu_655_p3 <= 
        next_urem_fu_643_p2 when (tmp_38_fu_649_p2(0) = '1') else 
        ap_const_lv20_0;

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    mul3_fu_2673_p0 <= ap_const_lv24_AAB(13 - 1 downto 0);
    mul3_fu_2673_p1 <= mul3_fu_2673_p10(11 - 1 downto 0);
    mul3_fu_2673_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_reg_2902_pp1_iter13_reg),24));
    mul_fu_2662_p0 <= mul_fu_2662_p00(11 - 1 downto 0);
    mul_fu_2662_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_reg_2902_pp1_iter13_reg),24));
    mul_fu_2662_p1 <= ap_const_lv24_AAB(13 - 1 downto 0);
    next_mul1_fu_765_p2 <= std_logic_vector(unsigned(ap_const_lv40_111112) + unsigned(ap_phi_mux_phi_mul1_phi_fu_437_p4));
    next_mul_fu_663_p2 <= std_logic_vector(unsigned(ap_const_lv40_111112) + unsigned(phi_mul_reg_422));
    next_urem_fu_643_p2 <= std_logic_vector(unsigned(ap_const_lv20_1) + unsigned(p_4_reg_445));
    not_s_fu_1371_p2 <= (tmp_76_fu_1330_p3 xor ap_const_lv1_1);
    p_103_fu_1064_p2 <= (tmp_40_fu_1057_p3 xor tmp_39_fu_1032_p3);
    p_104_fu_2158_p2 <= (p_103_reg_2973_pp1_iter19_reg xor ap_const_lv1_1);
    p_107_fu_717_p2 <= std_logic_vector(unsigned(p_s0_v_cast_fu_621_p1) + unsigned(tmp_23_fu_711_p2));
    p_114_fu_731_p2 <= (tmp_42_fu_723_p3 xor tmp_41_fu_669_p3);
    p_116_fu_2163_p2 <= (p_114_reg_2922_pp1_iter19_reg xor ap_const_lv1_1);
    p_118_cast345_cast_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_118_reg_2981_pp1_iter17_reg),3));
    p_118_fu_1070_p2 <= std_logic_vector(unsigned(tmp_25_fu_1040_p3) + unsigned(tmp_26_fu_1048_p4));
    p_121_fu_2172_p2 <= (p_116_fu_2163_p2 and p_103_reg_2973_pp1_iter19_reg);
    p_122_fu_1076_p2 <= "1" when (unsigned(tmp_30_reg_2902_pp1_iter13_reg) < unsigned(ap_const_lv11_3)) else "0";
    p_124_fu_1324_p2 <= std_logic_vector(signed(ap_const_lv3_7) + signed(p_118_cast345_cast_fu_1289_p1));
    p_126_fu_1338_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(p_118_reg_2981_pp1_iter17_reg));
    p_129_cast_fu_2006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_129_fu_1999_p3),11));
    p_129_fu_1999_p3 <= 
        ap_const_lv10_0 when (p_122_reg_2990_pp1_iter18_reg(0) = '1') else 
        tmp_92_fu_1995_p1;
    p_130_fu_1387_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(p_118_cast345_cast_fu_1289_p1));
    p_132_fu_1393_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(p_118_reg_2981_pp1_iter17_reg));
    p_135_fu_1081_p2 <= "1" when (unsigned(tmp_30_reg_2902_pp1_iter13_reg) < unsigned(ap_const_lv11_77D)) else "0";
    p_136_cast_fu_2110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_136_fu_2103_p3),11));
    p_136_fu_2103_p3 <= 
        tmp_109_fu_2099_p1 when (p_135_reg_2997_pp1_iter18_reg(0) = '1') else 
        ap_const_lv10_0;
    p_137_cast_fu_2177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_137_reg_3138),12));
    p_137_fu_2114_p2 <= std_logic_vector(unsigned(p_129_cast_fu_2006_p1) + unsigned(p_136_cast_fu_2110_p1));
    p_138_fu_2180_p2 <= (p_114_reg_2922_pp1_iter19_reg and p_104_fu_2158_p2);
    p_140_fu_737_p2 <= "1" when (unsigned(p_s0_v_reg_411) < unsigned(ap_const_lv20_780)) else "0";
    p_143_cast1_fu_2278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_143_fu_2271_p3),11));
    p_143_fu_2271_p3 <= 
        ap_const_lv10_0 when (p_140_reg_2930_pp1_iter19_reg(0) = '1') else 
        tmp_125_fu_2267_p1;
    p_146_fu_743_p2 <= "1" when (unsigned(p_s0_v_reg_411) < unsigned(ap_const_lv20_E0880)) else "0";
    p_147_cast1_fu_2307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_147_fu_2300_p3),11));
    p_147_fu_2300_p3 <= 
        tmp_141_fu_2296_p1 when (p_146_reg_2937_pp1_iter19_reg(0) = '1') else 
        ap_const_lv10_0;
    p_148_fu_1086_p2 <= "1" when (unsigned(tmp_30_reg_2902_pp1_iter13_reg) > unsigned(ap_const_lv11_77C)) else "0";
    p_149_fu_749_p2 <= "1" when (unsigned(p_s0_v_reg_411) > unsigned(ap_const_lv20_E087F)) else "0";
    p_153_cast_fu_2420_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_153_fu_2412_p3),11));
    p_153_fu_2412_p3 <= 
        ap_const_lv10_0 when (tmp_49_fu_2408_p2(0) = '1') else 
        tmp_157_fu_2404_p1;
    p_157_cast_fu_2516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_157_fu_2508_p3),11));
    p_157_fu_2508_p3 <= 
        ap_const_lv10_0 when (tmp_50_fu_2504_p2(0) = '1') else 
        tmp_173_fu_2500_p1;
    p_158_cast_fu_2526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_158_fu_2520_p2),12));
    p_158_fu_2520_p2 <= std_logic_vector(unsigned(p_153_cast_fu_2420_p1) + unsigned(p_157_cast_fu_2516_p1));
    p_162_cast_cast_fu_1658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_162_fu_1650_p3),11));
    p_162_fu_1650_p3 <= 
        ap_const_lv10_0 when (tmp_51_fu_1646_p2(0) = '1') else 
        tmp_189_fu_1642_p1;
    p_167_cast_cast_fu_1780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_167_fu_1772_p3),11));
    p_167_fu_1772_p3 <= 
        ap_const_lv10_0 when (tmp_52_fu_1768_p2(0) = '1') else 
        tmp_205_fu_1764_p1;
    p_168_fu_2533_p2 <= std_logic_vector(unsigned(p_158_cast_fu_2526_p1) + unsigned(tmp35_cast_fu_2530_p1));
    p_172_fu_2539_p2 <= std_logic_vector(unsigned(p_143_cast1_fu_2278_p1) + unsigned(p_147_cast1_fu_2307_p1));
    p_180_fu_2549_p2 <= std_logic_vector(unsigned(p_137_cast_fu_2177_p1) + unsigned(tmp36_cast_fu_2545_p1));
    p_182_fu_2555_p2 <= (p_114_reg_2922_pp1_iter19_reg xor p_103_reg_2973_pp1_iter19_reg);
    p_209_fu_1091_p2 <= "1" when (tmp_31_fu_755_p1 = ap_const_lv3_1) else "0";
    p_214_fu_2655_p3 <= 
        tmp_59_fu_2594_p3 when (p_24_reg_2948_pp1_iter19_reg(0) = '1') else 
        tmp_72_fu_2648_p3;
    p_24_fu_759_p2 <= "1" when (tmp_31_fu_755_p1 = ap_const_lv3_0) else "0";
    p_35_cast_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_774_p4),12));
    p_37_fu_810_p2 <= std_logic_vector(unsigned(tmp_6_fu_804_p2) + unsigned(tmp_29_reg_2896_pp1_iter13_reg));
    p_44_cast_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_815_p3),2));
    p_46_fu_836_p2 <= "1" when (tmp_7_fu_823_p4 = p_44_cast_fu_832_p1) else "0";
    p_57_cast1_fu_842_p4 <= mul_fu_2662_p2(23 downto 15);
    p_59_fu_890_p2 <= std_logic_vector(unsigned(tmp_28_reg_2891_pp1_iter13_reg) + unsigned(tmp_10_fu_884_p2));
    p_60_cast_fu_903_p3 <= 
        ap_const_lv9_1FF when (tmp_33_fu_895_p3(0) = '1') else 
        ap_const_lv9_0;
        p_66_cast_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_66_reg_2962),18));

    p_66_fu_911_p2 <= std_logic_vector(unsigned(p_60_cast_fu_903_p3) + unsigned(p_57_cast1_fu_842_p4));
    p_67_cast_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_917_p4),10));
    p_69_fu_961_p2 <= std_logic_vector(unsigned(p_s0_v_cast_reg_2886_pp1_iter13_reg) + unsigned(tmp_12_fu_955_p2));
    p_70_1_cast_fu_974_p3 <= 
        ap_const_lv10_3FF when (tmp_35_fu_966_p3(0) = '1') else 
        ap_const_lv10_0;
    p_76_fu_982_p2 <= std_logic_vector(unsigned(p_70_1_cast_fu_974_p3) + unsigned(p_67_cast_fu_927_p1));
    p_78_fu_1134_p2 <= std_logic_vector(unsigned(ap_const_lv18_12B5F) + unsigned(tmp_13_fu_1128_p2));
    p_79_fu_1140_p2 <= "1" when (signed(p_66_cast_fu_1097_p1) < signed(p_78_fu_1134_p2)) else "0";
    p_93_cast_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_991_p4),12));
    p_95_fu_1027_p2 <= std_logic_vector(unsigned(tmp_29_reg_2896_pp1_iter13_reg) + unsigned(tmp_21_fu_1021_p2));
    p_Result_10_fu_2291_p2 <= (tmp_139_fu_2285_p2 and tmp_138_reg_3114_pp1_iter19_reg);
    p_Result_11_fu_2398_p2 <= (tmp_155_fu_2392_p2 and tmp_154_fu_2386_p2);
    p_Result_12_fu_2494_p2 <= (tmp_171_fu_2488_p2 and tmp_170_fu_2482_p2);
    p_Result_13_fu_1636_p2 <= (tmp_187_fu_1630_p2 and tmp_186_fu_1624_p2);
    p_Result_14_fu_1758_p2 <= (tmp_203_fu_1752_p2 and tmp_202_fu_1746_p2);
    p_Result_7_fu_1989_p2 <= (tmp_90_fu_1983_p2 and tmp_89_fu_1977_p2);
    p_Result_8_fu_2093_p2 <= (tmp_107_fu_2087_p2 and tmp_106_fu_2081_p2);
    p_Result_9_fu_2261_p2 <= (tmp_123_fu_2255_p2 and tmp_122_fu_2249_p2);
    p_Result_s_fu_1896_p2 <= (tmp_74_fu_1890_p2 and tmp_73_fu_1884_p2);
    p_Val2_12_fu_2424_p3 <= 
        p_idata_window_0_v_7_fu_276 when (tmp_93_reg_3075_pp1_iter19_reg(0) = '1') else 
        p_idata_window_0_v_8_fu_280;
    p_Val2_13_fu_1536_p4 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_s_fu_1371_p2),2));
    p_Val2_14_fu_1662_p3 <= 
        p_idata_window_2_v_8_fu_300 when (tmp_93_fu_1398_p3(0) = '1') else 
        p_idata_window_2_v_9_fu_304;
    p_Val2_6_fu_2010_p3 <= 
        p_idata_window_1_v_7_fu_288 when (tmp_93_reg_3075(0) = '1') else 
        p_idata_window_1_v_8_fu_292;

    p_demosaic_V_bv_V_blk_n_assign_proc : process(p_demosaic_V_bv_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter21, exitcond_reg_2877_pp1_iter20_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_reg_2877_pp1_iter20_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1))) then 
            p_demosaic_V_bv_V_blk_n <= p_demosaic_V_bv_V_full_n;
        else 
            p_demosaic_V_bv_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_demosaic_V_bv_V_din <= p_214_reg_3168;

    p_demosaic_V_bv_V_write_assign_proc : process(ap_enable_reg_pp1_iter21, exitcond_reg_2877_pp1_iter20_reg, ap_block_pp1_stage0_11001)
    begin
        if (((exitcond_reg_2877_pp1_iter20_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_demosaic_V_bv_V_write <= ap_const_logic_1;
        else 
            p_demosaic_V_bv_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_idata_V_bv_V_blk_n_assign_proc : process(p_idata_V_bv_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond2_reg_2737, ap_enable_reg_pp1_iter16, ap_block_pp1_stage0, p_24_reg_2948_pp1_iter15_reg, p_46_reg_2958_pp1_iter15_reg, p_79_reg_3013)
    begin
        if ((((p_79_reg_3013 = ap_const_lv1_1) and (p_46_reg_2958_pp1_iter15_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter15_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter16 = ap_const_logic_1)) or ((exitcond2_reg_2737 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_idata_V_bv_V_blk_n <= p_idata_V_bv_V_empty_n;
        else 
            p_idata_V_bv_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_idata_V_bv_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond2_reg_2737, ap_enable_reg_pp1_iter16, ap_block_pp0_stage0_11001, ap_predicate_op223_read_state21, ap_block_pp1_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_predicate_op223_read_state21 = ap_const_boolean_1)) or ((exitcond2_reg_2737 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_idata_V_bv_V_read <= ap_const_logic_1;
        else 
            p_idata_V_bv_V_read <= ap_const_logic_0;
        end if; 
    end process;

    p_idata_buffer1_0_5_fu_1250_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_37_fu_1230_p1));
    p_idata_buffer1_0_6_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_idata_buffer1_0_5_fu_1250_p2),32));

    p_idata_buffer1_0_s_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter18, tmp_9_fu_483_p1, tmp_18_fu_1240_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1))) then 
            p_idata_buffer1_0_s_address0 <= tmp_18_fu_1240_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            p_idata_buffer1_0_s_address0 <= tmp_9_fu_483_p1(8 - 1 downto 0);
        else 
            p_idata_buffer1_0_s_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_idata_buffer1_0_s_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter18, tmp_1_fu_539_p1, tmp_19_fu_1245_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1))) then 
            p_idata_buffer1_0_s_address1 <= tmp_19_fu_1245_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_idata_buffer1_0_s_address1 <= tmp_1_fu_539_p1(8 - 1 downto 0);
        else 
            p_idata_buffer1_0_s_address1 <= "XXXXXXXX";
        end if; 
    end process;


    p_idata_buffer1_0_s_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter18)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_idata_buffer1_0_s_ce0 <= ap_const_logic_1;
        else 
            p_idata_buffer1_0_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_idata_buffer1_0_s_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter18)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_idata_buffer1_0_s_ce1 <= ap_const_logic_1;
        else 
            p_idata_buffer1_0_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_idata_buffer1_0_s_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter18, p_idata_window_1_v_2_fu_232, p_idata_window_1_v_9_fu_296)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1))) then 
            p_idata_buffer1_0_s_d1 <= p_idata_window_1_v_9_fu_296;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_idata_buffer1_0_s_d1 <= p_idata_window_1_v_2_fu_232;
        else 
            p_idata_buffer1_0_s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_idata_buffer1_0_s_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond2_reg_2737, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, p_24_reg_2948_pp1_iter17_reg, p_46_reg_2958_pp1_iter17_reg, ap_enable_reg_pp1_iter18)
    begin
        if ((((exitcond2_reg_2737 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((p_46_reg_2958_pp1_iter17_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter17_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_idata_buffer1_0_s_we1 <= ap_const_logic_1;
        else 
            p_idata_buffer1_0_s_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_idata_buffer1_1_1_fu_471_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_idata_buffer1_it_s_phi_fu_403_p4) + unsigned(ap_const_lv8_1));
    p_idata_buffer1_1_6_fu_1187_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(tmp_36_fu_1167_p1));
    p_idata_buffer1_1_7_fu_1193_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_idata_buffer1_1_6_fu_1187_p2),32));

    p_idata_buffer1_1_s_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter17, tmp_9_fu_483_p1, tmp_15_fu_1177_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1))) then 
            p_idata_buffer1_1_s_address0 <= tmp_15_fu_1177_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            p_idata_buffer1_1_s_address0 <= tmp_9_fu_483_p1(8 - 1 downto 0);
        else 
            p_idata_buffer1_1_s_address0 <= "XXXXXXXX";
        end if; 
    end process;


    p_idata_buffer1_1_s_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter17, tmp_1_fu_539_p1, tmp_16_fu_1182_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1))) then 
            p_idata_buffer1_1_s_address1 <= tmp_16_fu_1182_p1(8 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_idata_buffer1_1_s_address1 <= tmp_1_fu_539_p1(8 - 1 downto 0);
        else 
            p_idata_buffer1_1_s_address1 <= "XXXXXXXX";
        end if; 
    end process;


    p_idata_buffer1_1_s_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter17)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_idata_buffer1_1_s_ce0 <= ap_const_logic_1;
        else 
            p_idata_buffer1_1_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_idata_buffer1_1_s_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter17)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_idata_buffer1_1_s_ce1 <= ap_const_logic_1;
        else 
            p_idata_buffer1_1_s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_idata_buffer1_1_s_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter17, p_idata_window_2_v_2_fu_244, p_idata_window_2_v_10_fu_308)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1))) then 
            p_idata_buffer1_1_s_d1 <= p_idata_window_2_v_10_fu_308;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_idata_buffer1_1_s_d1 <= p_idata_window_2_v_2_fu_244;
        else 
            p_idata_buffer1_1_s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_idata_buffer1_1_s_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond2_reg_2737, ap_block_pp0_stage0_11001, ap_block_pp1_stage0_11001, p_24_reg_2948_pp1_iter16_reg, p_46_reg_2958_pp1_iter16_reg, ap_enable_reg_pp1_iter17)
    begin
        if ((((exitcond2_reg_2737 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((p_46_reg_2958_pp1_iter16_reg = ap_const_lv1_1) and (p_24_reg_2948_pp1_iter16_reg = ap_const_lv1_1) and (ap_enable_reg_pp1_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            p_idata_buffer1_1_s_we1 <= ap_const_logic_1;
        else 
            p_idata_buffer1_1_s_we1 <= ap_const_logic_0;
        end if; 
    end process;

        p_neg1_cast_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_neg1_fu_1107_p2),18));

    p_neg1_fu_1107_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(p_shl6_fu_1100_p3));
    p_s0_v76_fu_615_p2 <= std_logic_vector(unsigned(p_s0_v_reg_411) + unsigned(ap_const_lv20_1));
    p_s0_v_cast_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_s0_v_reg_411),21));
    p_shl10_cast_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_699_p3),21));
    p_shl1_fu_796_p3 <= (tmp_fu_787_p4 & ap_const_lv2_0);
    p_shl2_cast_fu_868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl2_fu_860_p3),13));
    p_shl2_fu_860_p3 <= (tmp_17_fu_851_p4 & ap_const_lv4_0);
    p_shl3_cast_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl3_fu_872_p3),13));
    p_shl3_fu_872_p3 <= (tmp_17_fu_851_p4 & ap_const_lv2_0);
    p_shl4_cast_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl4_fu_931_p3),21));
    p_shl4_fu_931_p3 <= (tmp_34_fu_917_p4 & ap_const_lv11_0);
    p_shl5_cast_fu_951_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl5_fu_943_p3),21));
    p_shl5_fu_943_p3 <= (tmp_34_fu_917_p4 & ap_const_lv7_0);
    p_shl6_fu_1100_p3 <= (p_76_reg_2967 & ap_const_lv7_0);
        p_shl7_cast_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_shl7_fu_1117_p3),18));

    p_shl7_fu_1117_p3 <= (p_76_reg_2967 & ap_const_lv5_0);
    p_shl8_fu_1013_p3 <= (tmp_22_fu_1004_p4 & ap_const_lv2_0);
    p_shl9_cast_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl9_fu_687_p3),21));
    p_shl9_fu_687_p3 <= (tmp_27_fu_677_p4 & ap_const_lv11_0);
    p_shl_fu_699_p3 <= (tmp_27_fu_677_p4 & ap_const_lv7_0);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp35_cast_fu_2530_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp35_reg_3133_pp1_iter19_reg),12));
    tmp35_fu_1784_p2 <= std_logic_vector(unsigned(p_167_cast_cast_fu_1780_p1) + unsigned(p_162_cast_cast_fu_1658_p1));
    tmp36_cast_fu_2545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_172_fu_2539_p2),12));
    tmp_100_fu_2046_p3 <= 
        tmp_97_fu_2030_p2 when (tmp_94_reg_3095(0) = '1') else 
        tmp_99_fu_2041_p2;
    tmp_101_fu_2053_p3 <= 
        tmp_96_fu_2020_p4 when (tmp_94_reg_3095(0) = '1') else 
        p_Val2_6_fu_2010_p3;
    tmp_102_fu_2060_p3 <= 
        tmp_98_fu_2035_p2 when (tmp_94_reg_3095(0) = '1') else 
        tmp_95_fu_2017_p1;
    tmp_103_fu_2067_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_100_fu_2046_p3));
    tmp_104_fu_2073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_102_fu_2060_p3),40));
    tmp_105_fu_2077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_103_fu_2067_p2),40));
    tmp_106_fu_2081_p2 <= std_logic_vector(shift_right(unsigned(tmp_101_fu_2053_p3),to_integer(unsigned('0' & tmp_104_fu_2073_p1(31-1 downto 0)))));
    tmp_107_fu_2087_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_105_fu_2077_p1(31-1 downto 0)))));
    tmp_109_fu_2099_p1 <= p_Result_8_fu_2093_p2(10 - 1 downto 0);
    tmp_10_fu_884_p2 <= std_logic_vector(unsigned(p_shl3_cast_fu_880_p1) - unsigned(p_shl2_cast_fu_868_p1));
    tmp_110_fu_1440_p2 <= "1" when (unsigned(Lo_assign_cast_fu_1304_p1) > unsigned(Hi_assign_cast_fu_1314_p1)) else "0";
    tmp_111_fu_2185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_reg_3027_pp1_iter19_reg),6));
    
    tmp_112_fu_2188_p4_proc : process(p_idata_window_0_v_8_fu_280)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_112_fu_2188_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_idata_window_0_v_8_fu_280;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_112_fu_2188_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_112_fu_2188_p4_i) := p_idata_window_0_v_8_fu_280(40-1-tmp_112_fu_2188_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_112_fu_2188_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_113_fu_2198_p2 <= std_logic_vector(unsigned(tmp_111_fu_2185_p1) - unsigned(Hi_assign_reg_3033_pp1_iter19_reg));
    tmp_114_fu_2203_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_111_fu_2185_p1));
    tmp_115_fu_2209_p2 <= std_logic_vector(unsigned(Hi_assign_reg_3033_pp1_iter19_reg) - unsigned(tmp_111_fu_2185_p1));
    tmp_116_fu_2214_p3 <= 
        tmp_113_fu_2198_p2 when (tmp_110_reg_3102_pp1_iter19_reg(0) = '1') else 
        tmp_115_fu_2209_p2;
    tmp_117_fu_2221_p3 <= 
        tmp_112_fu_2188_p4 when (tmp_110_reg_3102_pp1_iter19_reg(0) = '1') else 
        p_idata_window_0_v_8_fu_280;
    tmp_118_fu_2228_p3 <= 
        tmp_114_fu_2203_p2 when (tmp_110_reg_3102_pp1_iter19_reg(0) = '1') else 
        tmp_111_fu_2185_p1;
    tmp_119_fu_2235_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_116_fu_2214_p3));
    tmp_120_fu_2241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_118_fu_2228_p3),40));
    tmp_121_fu_2245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_119_fu_2235_p2),40));
    tmp_122_fu_2249_p2 <= std_logic_vector(shift_right(unsigned(tmp_117_fu_2221_p3),to_integer(unsigned('0' & tmp_120_fu_2241_p1(31-1 downto 0)))));
    tmp_123_fu_2255_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_121_fu_2245_p1(31-1 downto 0)))));
    tmp_125_fu_2267_p1 <= p_Result_9_fu_2261_p2(10 - 1 downto 0);
    tmp_126_fu_1446_p2 <= "1" when (unsigned(Lo_assign_cast_fu_1304_p1) > unsigned(Hi_assign_cast_fu_1314_p1)) else "0";
    tmp_127_fu_1452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_fu_1292_p4),6));
    
    tmp_128_fu_1456_p4_proc : process(p_idata_window_2_v_9_fu_304)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_128_fu_1456_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_idata_window_2_v_9_fu_304;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_128_fu_1456_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_128_fu_1456_p4_i) := p_idata_window_2_v_9_fu_304(40-1-tmp_128_fu_1456_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_128_fu_1456_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_129_fu_1466_p2 <= std_logic_vector(unsigned(tmp_127_fu_1452_p1) - unsigned(Hi_assign_fu_1308_p2));
    tmp_12_fu_955_p2 <= std_logic_vector(unsigned(p_shl5_cast_fu_951_p1) - unsigned(p_shl4_cast_fu_939_p1));
    tmp_130_fu_1472_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_127_fu_1452_p1));
    tmp_131_fu_1478_p2 <= std_logic_vector(unsigned(Hi_assign_fu_1308_p2) - unsigned(tmp_127_fu_1452_p1));
    tmp_132_fu_1484_p3 <= 
        tmp_129_fu_1466_p2 when (tmp_126_fu_1446_p2(0) = '1') else 
        tmp_131_fu_1478_p2;
    tmp_133_fu_1492_p3 <= 
        tmp_128_fu_1456_p4 when (tmp_126_fu_1446_p2(0) = '1') else 
        p_idata_window_2_v_9_fu_304;
    tmp_134_fu_1500_p3 <= 
        tmp_130_fu_1472_p2 when (tmp_126_fu_1446_p2(0) = '1') else 
        tmp_127_fu_1452_p1;
    tmp_135_fu_1508_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_132_fu_1484_p3));
    tmp_136_fu_1514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_134_fu_1500_p3),40));
    tmp_137_fu_2282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_135_reg_3109_pp1_iter19_reg),40));
    tmp_138_fu_1518_p2 <= std_logic_vector(shift_right(unsigned(tmp_133_fu_1492_p3),to_integer(unsigned('0' & tmp_136_fu_1514_p1(31-1 downto 0)))));
    tmp_139_fu_2285_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_137_fu_2282_p1(31-1 downto 0)))));
    tmp_13_fu_1128_p2 <= std_logic_vector(signed(p_neg1_cast_fu_1113_p1) - signed(p_shl7_cast_fu_1124_p1));
    tmp_141_fu_2296_p1 <= p_Result_10_fu_2291_p2(10 - 1 downto 0);
    tmp_142_fu_1524_p2 <= "1" when (unsigned(Lo_assign_1_cast_fu_1357_p1) > unsigned(Hi_assign_1_cast_fu_1367_p1)) else "0";
    tmp_143_fu_2322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_1_reg_3048_pp1_iter19_reg),6));
    
    tmp_144_fu_2325_p4_proc : process(p_Val2_11_fu_2311_p5)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_144_fu_2325_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_11_fu_2311_p5;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_144_fu_2325_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_144_fu_2325_p4_i) := p_Val2_11_fu_2311_p5(40-1-tmp_144_fu_2325_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_144_fu_2325_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_145_fu_2335_p2 <= std_logic_vector(unsigned(tmp_143_fu_2322_p1) - unsigned(Hi_assign_1_reg_3054_pp1_iter19_reg));
    tmp_146_fu_2340_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_143_fu_2322_p1));
    tmp_147_fu_2346_p2 <= std_logic_vector(unsigned(Hi_assign_1_reg_3054_pp1_iter19_reg) - unsigned(tmp_143_fu_2322_p1));
    tmp_148_fu_2351_p3 <= 
        tmp_145_fu_2335_p2 when (tmp_142_reg_3119_pp1_iter19_reg(0) = '1') else 
        tmp_147_fu_2346_p2;
    tmp_149_fu_2358_p3 <= 
        tmp_144_fu_2325_p4 when (tmp_142_reg_3119_pp1_iter19_reg(0) = '1') else 
        p_Val2_11_fu_2311_p5;
    tmp_150_fu_2365_p3 <= 
        tmp_146_fu_2340_p2 when (tmp_142_reg_3119_pp1_iter19_reg(0) = '1') else 
        tmp_143_fu_2322_p1;
    tmp_151_fu_2372_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_148_fu_2351_p3));
    tmp_152_fu_2378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_150_fu_2365_p3),40));
    tmp_153_fu_2382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_151_fu_2372_p2),40));
    tmp_154_fu_2386_p2 <= std_logic_vector(shift_right(unsigned(tmp_149_fu_2358_p3),to_integer(unsigned('0' & tmp_152_fu_2378_p1(31-1 downto 0)))));
    tmp_155_fu_2392_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_153_fu_2382_p1(31-1 downto 0)))));
    tmp_157_fu_2404_p1 <= p_Result_11_fu_2398_p2(10 - 1 downto 0);
    tmp_158_fu_1530_p2 <= "1" when (unsigned(Lo_assign_2_cast_fu_1420_p1) > unsigned(Hi_assign_2_cast_fu_1430_p1)) else "0";
    tmp_159_fu_2120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_2_reg_3081),6));
    tmp_15_fu_1177_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_cast_fu_1171_p2),64));
    
    tmp_160_fu_2431_p4_proc : process(p_Val2_12_fu_2424_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_160_fu_2431_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_12_fu_2424_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_160_fu_2431_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_160_fu_2431_p4_i) := p_Val2_12_fu_2424_p3(40-1-tmp_160_fu_2431_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_160_fu_2431_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_161_fu_2441_p2 <= std_logic_vector(unsigned(tmp_159_reg_3143) - unsigned(Hi_assign_2_reg_3087_pp1_iter19_reg));
    tmp_162_fu_2123_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_159_fu_2120_p1));
    tmp_163_fu_2445_p2 <= std_logic_vector(unsigned(Hi_assign_2_reg_3087_pp1_iter19_reg) - unsigned(tmp_159_reg_3143));
    tmp_164_fu_2449_p3 <= 
        tmp_161_fu_2441_p2 when (tmp_158_reg_3126_pp1_iter19_reg(0) = '1') else 
        tmp_163_fu_2445_p2;
    tmp_165_fu_2456_p3 <= 
        tmp_160_fu_2431_p4 when (tmp_158_reg_3126_pp1_iter19_reg(0) = '1') else 
        p_Val2_12_fu_2424_p3;
    tmp_166_fu_2463_p3 <= 
        tmp_162_reg_3150 when (tmp_158_reg_3126_pp1_iter19_reg(0) = '1') else 
        tmp_159_reg_3143;
    tmp_167_fu_2468_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_164_fu_2449_p3));
    tmp_168_fu_2474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_166_fu_2463_p3),40));
    tmp_169_fu_2478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_167_fu_2468_p2),40));
    tmp_16_fu_1182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_idata_buffer1_it_1_fu_272),64));
    tmp_170_fu_2482_p2 <= std_logic_vector(shift_right(unsigned(tmp_165_fu_2456_p3),to_integer(unsigned('0' & tmp_168_fu_2474_p1(31-1 downto 0)))));
    tmp_171_fu_2488_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_169_fu_2478_p1(31-1 downto 0)))));
    tmp_173_fu_2500_p1 <= p_Result_12_fu_2494_p2(10 - 1 downto 0);
    tmp_174_fu_1548_p2 <= "1" when (unsigned(Lo_assign_1_cast_fu_1357_p1) > unsigned(Hi_assign_1_cast_fu_1367_p1)) else "0";
    tmp_175_fu_1554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_1_fu_1343_p4),6));
    
    tmp_176_fu_1558_p4_proc : process(p_Val2_13_fu_1536_p5)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_176_fu_1558_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_13_fu_1536_p5;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_176_fu_1558_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_176_fu_1558_p4_i) := p_Val2_13_fu_1536_p5(40-1-tmp_176_fu_1558_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_176_fu_1558_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_177_fu_1568_p2 <= std_logic_vector(unsigned(tmp_175_fu_1554_p1) - unsigned(Hi_assign_1_fu_1361_p2));
    tmp_178_fu_1574_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_175_fu_1554_p1));
    tmp_179_fu_1580_p2 <= std_logic_vector(unsigned(Hi_assign_1_fu_1361_p2) - unsigned(tmp_175_fu_1554_p1));
    tmp_17_fu_851_p4 <= mul_fu_2662_p2(22 downto 15);
    tmp_180_fu_1586_p3 <= 
        tmp_177_fu_1568_p2 when (tmp_174_fu_1548_p2(0) = '1') else 
        tmp_179_fu_1580_p2;
    tmp_181_fu_1594_p3 <= 
        tmp_176_fu_1558_p4 when (tmp_174_fu_1548_p2(0) = '1') else 
        p_Val2_13_fu_1536_p5;
    tmp_182_fu_1602_p3 <= 
        tmp_178_fu_1574_p2 when (tmp_174_fu_1548_p2(0) = '1') else 
        tmp_175_fu_1554_p1;
    tmp_183_fu_1610_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_180_fu_1586_p3));
    tmp_184_fu_1616_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_182_fu_1602_p3),40));
    tmp_185_fu_1620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_183_fu_1610_p2),40));
    tmp_186_fu_1624_p2 <= std_logic_vector(shift_right(unsigned(tmp_181_fu_1594_p3),to_integer(unsigned('0' & tmp_184_fu_1616_p1(31-1 downto 0)))));
    tmp_187_fu_1630_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_185_fu_1620_p1(31-1 downto 0)))));
    tmp_189_fu_1642_p1 <= p_Result_13_fu_1636_p2(10 - 1 downto 0);
    tmp_18_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_39_cast_fu_1234_p2),64));
    tmp_190_fu_1670_p2 <= "1" when (unsigned(Lo_assign_2_cast_fu_1420_p1) > unsigned(Hi_assign_2_cast_fu_1430_p1)) else "0";
    tmp_191_fu_1676_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_2_fu_1406_p4),6));
    
    tmp_192_fu_1680_p4_proc : process(p_Val2_14_fu_1662_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_192_fu_1680_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_14_fu_1662_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_192_fu_1680_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_192_fu_1680_p4_i) := p_Val2_14_fu_1662_p3(40-1-tmp_192_fu_1680_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_192_fu_1680_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_193_fu_1690_p2 <= std_logic_vector(unsigned(tmp_191_fu_1676_p1) - unsigned(Hi_assign_2_fu_1424_p2));
    tmp_194_fu_1696_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_191_fu_1676_p1));
    tmp_195_fu_1702_p2 <= std_logic_vector(unsigned(Hi_assign_2_fu_1424_p2) - unsigned(tmp_191_fu_1676_p1));
    tmp_196_fu_1708_p3 <= 
        tmp_193_fu_1690_p2 when (tmp_190_fu_1670_p2(0) = '1') else 
        tmp_195_fu_1702_p2;
    tmp_197_fu_1716_p3 <= 
        tmp_192_fu_1680_p4 when (tmp_190_fu_1670_p2(0) = '1') else 
        p_Val2_14_fu_1662_p3;
    tmp_198_fu_1724_p3 <= 
        tmp_194_fu_1696_p2 when (tmp_190_fu_1670_p2(0) = '1') else 
        tmp_191_fu_1676_p1;
    tmp_199_fu_1732_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_196_fu_1708_p3));
    tmp_19_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_idata_buffer1_it_2_fu_268),64));
    tmp_1_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_idata_buffer1_it_s_reg_399),64));
    tmp_200_fu_1738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_198_fu_1724_p3),40));
    tmp_201_fu_1742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_199_fu_1732_p2),40));
    tmp_202_fu_1746_p2 <= std_logic_vector(shift_right(unsigned(tmp_197_fu_1716_p3),to_integer(unsigned('0' & tmp_200_fu_1738_p1(31-1 downto 0)))));
    tmp_203_fu_1752_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_201_fu_1742_p1(31-1 downto 0)))));
    tmp_205_fu_1764_p1 <= p_Result_14_fu_1758_p2(10 - 1 downto 0);
    tmp_20_fu_991_p4 <= mul3_fu_2673_p2(23 downto 13);
    tmp_21_fu_1021_p2 <= std_logic_vector(unsigned(p_93_cast_fu_1000_p1) - unsigned(p_shl8_fu_1013_p3));
    tmp_22_fu_1004_p4 <= mul3_fu_2673_p2(22 downto 13);
    tmp_23_fu_711_p2 <= std_logic_vector(unsigned(p_shl10_cast_fu_707_p1) - unsigned(p_shl9_cast_fu_695_p1));
    tmp_24_fu_2168_p2 <= (p_114_reg_2922_pp1_iter19_reg or p_103_reg_2973_pp1_iter19_reg);
    tmp_25_fu_1040_p3 <= 
        ap_const_lv2_3 when (tmp_39_fu_1032_p3(0) = '1') else 
        ap_const_lv2_0;
    tmp_26_fu_1048_p4 <= mul3_fu_2673_p2(14 downto 13);
    tmp_27_fu_677_p4 <= phi_mul_reg_422(39 downto 31);
    tmp_28_fu_625_p1 <= p_4_reg_445(13 - 1 downto 0);
    tmp_29_fu_629_p1 <= p_4_reg_445(12 - 1 downto 0);
    tmp_30_fu_633_p1 <= p_4_reg_445(11 - 1 downto 0);
    tmp_31_fu_755_p1 <= grp_fu_637_p2(3 - 1 downto 0);
    tmp_32_fu_815_p3 <= p_37_fu_810_p2(11 downto 11);
    tmp_33_cast_fu_1171_p2 <= std_logic_vector(unsigned(ap_const_lv8_63) + unsigned(tmp_36_fu_1167_p1));
    tmp_33_fu_895_p3 <= p_59_fu_890_p2(12 downto 12);
    tmp_34_fu_917_p4 <= ap_phi_mux_phi_mul1_phi_fu_437_p4(39 downto 31);
    tmp_35_fu_966_p3 <= p_69_fu_961_p2(20 downto 20);
    tmp_36_fu_1167_p1 <= p_idata_buffer1_it_1_fu_272(8 - 1 downto 0);
    tmp_37_fu_1230_p1 <= p_idata_buffer1_it_2_fu_268(8 - 1 downto 0);
    tmp_38_fu_649_p2 <= "1" when (unsigned(next_urem_fu_643_p2) < unsigned(ap_const_lv20_780)) else "0";
    tmp_39_cast_fu_1234_p2 <= std_logic_vector(unsigned(ap_const_lv8_63) + unsigned(tmp_37_fu_1230_p1));
    tmp_39_fu_1032_p3 <= p_95_fu_1027_p2(11 downto 11);
    tmp_40_fu_1057_p3 <= mul3_fu_2673_p2(13 downto 13);
    tmp_41_fu_669_p3 <= phi_mul_reg_422(31 downto 31);
    tmp_42_fu_723_p3 <= p_107_fu_717_p2(20 downto 20);
    tmp_43_fu_1318_p2 <= "1" when (unsigned(Lo_assign_cast_fu_1304_p1) > unsigned(Hi_assign_cast_fu_1314_p1)) else "0";
    tmp_44_fu_1820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_reg_3027),6));
    
    tmp_45_fu_1823_p4_proc : process(p_idata_window_1_v_8_fu_292)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_45_fu_1823_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_idata_window_1_v_8_fu_292;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_45_fu_1823_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_45_fu_1823_p4_i) := p_idata_window_1_v_8_fu_292(40-1-tmp_45_fu_1823_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_45_fu_1823_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_46_fu_1833_p2 <= std_logic_vector(unsigned(tmp_44_fu_1820_p1) - unsigned(Hi_assign_reg_3033));
    tmp_47_fu_1838_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_44_fu_1820_p1));
    tmp_48_fu_1844_p2 <= std_logic_vector(unsigned(Hi_assign_reg_3033) - unsigned(tmp_44_fu_1820_p1));
    tmp_49_fu_2408_p2 <= (p_140_reg_2930_pp1_iter19_reg or p_122_reg_2990_pp1_iter19_reg);
    tmp_50_fu_2504_p2 <= (p_148_reg_3002_pp1_iter19_reg or p_140_reg_2930_pp1_iter19_reg);
    tmp_51_fu_1646_p2 <= (p_149_reg_2942_pp1_iter17_reg or p_122_reg_2990_pp1_iter17_reg);
    tmp_52_fu_1768_p2 <= (p_149_reg_2942_pp1_iter17_reg or p_148_reg_3002_pp1_iter17_reg);
    tmp_54_fu_2559_p4 <= p_172_fu_2539_p2(10 downto 3);
    tmp_55_fu_2569_p4 <= p_168_fu_2533_p2(11 downto 4);
    tmp_56_fu_2579_p3 <= 
        tmp_54_fu_2559_p4 when (p_138_fu_2180_p2(0) = '1') else 
        tmp_55_fu_2569_p4;
    tmp_57_fu_2587_p3 <= 
        tmp_53_reg_3155 when (p_121_fu_2172_p2(0) = '1') else 
        tmp_56_fu_2579_p3;
    tmp_59_fu_2594_p3 <= 
        tmp_57_fu_2587_p3 when (tmp_24_fu_2168_p2(0) = '1') else 
        tmp_58_reg_3161;
    tmp_5_fu_774_p4 <= mul_fu_2662_p2(23 downto 13);
    tmp_60_fu_1849_p3 <= 
        tmp_46_fu_1833_p2 when (tmp_43_reg_3041(0) = '1') else 
        tmp_48_fu_1844_p2;
    tmp_61_fu_2601_p4 <= p_180_fu_2549_p2(11 downto 4);
    tmp_62_fu_2611_p3 <= 
        tmp_58_reg_3161 when (p_182_fu_2555_p2(0) = '1') else 
        tmp_61_fu_2601_p4;
    tmp_63_fu_1856_p3 <= 
        tmp_45_fu_1823_p4 when (tmp_43_reg_3041(0) = '1') else 
        p_idata_window_1_v_8_fu_292;
    tmp_64_fu_2618_p3 <= 
        tmp_62_fu_2611_p3 when (tmp_24_fu_2168_p2(0) = '1') else 
        tmp_61_fu_2601_p4;
    tmp_65_fu_1863_p3 <= 
        tmp_47_fu_1838_p2 when (tmp_43_reg_3041(0) = '1') else 
        tmp_44_fu_1820_p1;
    tmp_66_fu_1870_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_60_fu_1849_p3));
    tmp_67_fu_1876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_65_fu_1863_p3),40));
    tmp_68_fu_2626_p3 <= 
        tmp_53_reg_3155 when (p_138_fu_2180_p2(0) = '1') else 
        tmp_58_reg_3161;
    tmp_69_fu_2632_p3 <= 
        tmp_54_fu_2559_p4 when (p_121_fu_2172_p2(0) = '1') else 
        tmp_68_fu_2626_p3;
    tmp_6_fu_804_p2 <= std_logic_vector(unsigned(p_35_cast_fu_783_p1) - unsigned(p_shl1_fu_796_p3));
    tmp_70_fu_1880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_1870_p2),40));
    tmp_71_fu_2640_p3 <= 
        tmp_69_fu_2632_p3 when (tmp_24_fu_2168_p2(0) = '1') else 
        tmp_55_fu_2569_p4;
    tmp_72_fu_2648_p3 <= 
        tmp_64_fu_2618_p3 when (p_209_reg_3008_pp1_iter19_reg(0) = '1') else 
        tmp_71_fu_2640_p3;
    tmp_73_fu_1884_p2 <= std_logic_vector(shift_right(unsigned(tmp_63_fu_1856_p3),to_integer(unsigned('0' & tmp_67_fu_1876_p1(31-1 downto 0)))));
    tmp_74_fu_1890_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_70_fu_1880_p1(31-1 downto 0)))));
    tmp_76_fu_1330_p3 <= p_124_fu_1324_p2(2 downto 2);
    tmp_77_fu_1381_p2 <= "1" when (unsigned(Lo_assign_1_cast_fu_1357_p1) > unsigned(Hi_assign_1_cast_fu_1367_p1)) else "0";
    tmp_78_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_1_reg_3048),6));
    
    tmp_79_fu_1916_p4_proc : process(p_Val2_8_fu_1902_p5)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_79_fu_1916_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_8_fu_1902_p5;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_79_fu_1916_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_79_fu_1916_p4_i) := p_Val2_8_fu_1902_p5(40-1-tmp_79_fu_1916_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_79_fu_1916_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_7_cast_fu_477_p2 <= std_logic_vector(unsigned(ap_phi_mux_p_idata_buffer1_it_s_phi_fu_403_p4) + unsigned(ap_const_lv8_63));
    tmp_7_fu_823_p4 <= mul_fu_2662_p2(14 downto 13);
    tmp_80_fu_1926_p2 <= std_logic_vector(unsigned(tmp_78_fu_1913_p1) - unsigned(Hi_assign_1_reg_3054));
    tmp_81_fu_1931_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_78_fu_1913_p1));
    tmp_82_fu_1937_p2 <= std_logic_vector(unsigned(Hi_assign_1_reg_3054) - unsigned(tmp_78_fu_1913_p1));
    tmp_83_fu_1942_p3 <= 
        tmp_80_fu_1926_p2 when (tmp_77_reg_3068(0) = '1') else 
        tmp_82_fu_1937_p2;
    tmp_84_fu_1949_p3 <= 
        tmp_79_fu_1916_p4 when (tmp_77_reg_3068(0) = '1') else 
        p_Val2_8_fu_1902_p5;
    tmp_85_fu_1956_p3 <= 
        tmp_81_fu_1931_p2 when (tmp_77_reg_3068(0) = '1') else 
        tmp_78_fu_1913_p1;
    tmp_86_fu_1963_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_83_fu_1942_p3));
    tmp_87_fu_1969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_85_fu_1956_p3),40));
    tmp_88_fu_1973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_86_fu_1963_p2),40));
    tmp_89_fu_1977_p2 <= std_logic_vector(shift_right(unsigned(tmp_84_fu_1949_p3),to_integer(unsigned('0' & tmp_87_fu_1969_p1(31-1 downto 0)))));
    tmp_90_fu_1983_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv40_FFFFFFFFFF),to_integer(unsigned('0' & tmp_88_fu_1973_p1(31-1 downto 0)))));
    tmp_92_fu_1995_p1 <= p_Result_7_fu_1989_p2(10 - 1 downto 0);
    tmp_93_fu_1398_p3 <= p_130_fu_1387_p2(2 downto 2);
    tmp_94_fu_1434_p2 <= "1" when (unsigned(Lo_assign_2_cast_fu_1420_p1) > unsigned(Hi_assign_2_cast_fu_1430_p1)) else "0";
    tmp_95_fu_2017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Lo_assign_2_reg_3081),6));
    
    tmp_96_fu_2020_p4_proc : process(p_Val2_6_fu_2010_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(40+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_96_fu_2020_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(40 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_27(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Val2_6_fu_2010_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(40-1-unsigned(ap_const_lv32_27(6-1 downto 0)));
            for tmp_96_fu_2020_p4_i in 0 to 40-1 loop
                v0_cpy(tmp_96_fu_2020_p4_i) := p_Val2_6_fu_2010_p3(40-1-tmp_96_fu_2020_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(40-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_96_fu_2020_p4 <= resvalue(40-1 downto 0);
    end process;

    tmp_97_fu_2030_p2 <= std_logic_vector(unsigned(tmp_95_fu_2017_p1) - unsigned(Hi_assign_2_reg_3087));
    tmp_98_fu_2035_p2 <= std_logic_vector(signed(ap_const_lv6_27) - signed(tmp_95_fu_2017_p1));
    tmp_99_fu_2041_p2 <= std_logic_vector(unsigned(Hi_assign_2_reg_3087) - unsigned(tmp_95_fu_2017_p1));
    tmp_9_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_cast_fu_477_p2),64));
    tmp_fu_787_p4 <= mul_fu_2662_p2(22 downto 13);
end behav;
