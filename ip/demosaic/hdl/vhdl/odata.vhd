-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity odata is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_demosaic_V_bv_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_demosaic_V_bv_V_empty_n : IN STD_LOGIC;
    p_demosaic_V_bv_V_read : OUT STD_LOGIC;
    p_odata_V_bv_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_odata_V_bv_V_full_n : IN STD_LOGIC;
    p_odata_V_bv_V_write : OUT STD_LOGIC );
end;


architecture behav of odata is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv20_E1000 : STD_LOGIC_VECTOR (19 downto 0) := "11100001000000000000";
    constant ap_const_lv20_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_const_lv20_E0FFD : STD_LOGIC_VECTOR (19 downto 0) := "11100000111111111101";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv20_780 : STD_LOGIC_VECTOR (19 downto 0) := "00000000011110000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv18_3FC00 : STD_LOGIC_VECTOR (17 downto 0) := "111111110000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv11_80 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_const_lv11_FF : STD_LOGIC_VECTOR (10 downto 0) := "00011111111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv24_AAB : STD_LOGIC_VECTOR (23 downto 0) := "000000000000101010101011";
    constant ap_const_lv27_7FFFF54 : STD_LOGIC_VECTOR (26 downto 0) := "111111111111111111101010100";
    constant ap_const_lv28_FFFFEAD : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111010101101";
    constant ap_const_lv28_FFFFE54 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111001010100";
    constant ap_const_lv26_3FFFFAD : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111110101101";
    constant ap_const_lv27_4C800 : STD_LOGIC_VECTOR (26 downto 0) := "000000001001100100000000000";
    constant ap_const_lv28_96000 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010010110000000000000";
    constant ap_const_lv25_1D400 : STD_LOGIC_VECTOR (24 downto 0) := "0000000011101010000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_demosaic_V_bv_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond1_reg_1033 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal exitcond_reg_1061 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_221_reg_1070 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_odata_V_bv_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter15 : STD_LOGIC := '0';
    signal p_401_reg_1115 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_prefill_demosaic_reg_195 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_demosaic_window_1_1_reg_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_reg_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_reg_231 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_v_reg_244 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s0_v_reg_257 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_228_reg_268 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_demosaic_window_1_4_reg_279 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op81_read_state6 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter7 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter9 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter10 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter11 : BOOLEAN;
    signal ap_block_state17_pp1_stage0_iter12 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter13 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter14 : BOOLEAN;
    signal ap_predicate_op187_write_state20 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter15 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal p_demosaic_window_1_4_reg_279_pp1_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_4_reg_279_pp1_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_v_bv_V_1_reg_290_pp1_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_0_1_reg_302_pp1_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_7_reg_314 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond1_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_prefill_demosaic_1_fu_335_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal exitcond_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_reg_1061_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s0_v80_fu_357_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal p_221_fu_363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_373_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_258_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_258_reg_1079_pp1_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_urem_fu_462_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_demosaic_window_1_5_reg_1089 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_5_reg_1089_pp1_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_demosaic_window_1_6_reg_1095_pp1_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_reg_1100 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_reg_1105 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_odata_window_vs_s_fu_929_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_odata_window_vs_s_reg_1110 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_401_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter1_state6 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter14 : STD_LOGIC := '0';
    signal ap_phi_mux_p_Val2_7_phi_fu_317_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal p_demosaic_window_1_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_fu_174 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_329_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_377_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_fu_948_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_fu_387_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_7_fu_407_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_249_cast1_fu_396_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_fu_416_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_424_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_369_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_251_fu_430_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_fu_400_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal next_urem_fu_450_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_27_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_292_fu_481_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_295_fu_957_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_1_fu_493_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_300_fu_506_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_303_fu_964_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_8_fu_518_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_308_fu_531_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_cast7_fu_502_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_308_cast_cast_fu_539_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp2_fu_543_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp2_cast_fu_549_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_cast6_fu_527_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_313_fu_553_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_353_fu_569_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_362_fu_971_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_fu_581_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_368_fu_594_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_371_fu_978_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_15_fu_606_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_353_cast_cast_fu_577_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_cast_fu_615_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp4_fu_619_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp4_cast_fu_625_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_cast5_fu_590_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_374_fu_629_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_377_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_248_fu_652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_260_fu_660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_985_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_9_fu_675_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_8_fu_992_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_6_fu_999_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_s_fu_705_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_276_cast_fu_692_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_284_cast_fu_714_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp1_fu_718_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_269_cast_fu_684_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_285_fu_724_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_i_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_736_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_cast_fu_754_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_315_fu_757_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i1_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_316_fu_769_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i2_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_783_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_19_fu_1006_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_10_fu_799_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_20_fu_1013_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_21_fu_1020_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_11_fu_827_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_336_cast_fu_815_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_345_cast_fu_836_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp3_fu_840_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_328_cast_fu_808_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_346_fu_846_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_i3_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_858_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_cast_fu_876_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_376_fu_879_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i4_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_377_fu_891_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_i5_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_905_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_379_fu_909_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_350_fu_868_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_318_fu_787_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_289_fu_746_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_260_2_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_fu_917_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_648_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_fu_948_p0 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_fu_948_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_295_fu_957_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_295_fu_957_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_303_fu_964_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_303_fu_964_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_301_cast_fu_514_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_362_fu_971_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_362_fu_971_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_371_fu_978_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_371_fu_978_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_s_fu_985_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_s_fu_985_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_8_fu_992_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_8_fu_992_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_6_fu_999_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_6_fu_999_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_19_fu_1006_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal p_19_fu_1006_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_20_fu_1013_p0 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_20_fu_1013_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_21_fu_1020_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_21_fu_1020_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_377_ce : STD_LOGIC;
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal mul_fu_948_p10 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_19_fu_1006_p10 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_20_fu_1013_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_21_fu_1020_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_295_fu_957_p10 : STD_LOGIC_VECTOR (26 downto 0);
    signal p_371_fu_978_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_6_fu_999_p10 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_8_fu_992_p10 : STD_LOGIC_VECTOR (27 downto 0);
    signal p_s_fu_985_p10 : STD_LOGIC_VECTOR (26 downto 0);

    component demosaic_root_urehbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component demosaic_root_mulg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component demosaic_root_mulibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (8 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component demosaic_root_muljbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component demosaic_root_mulkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component demosaic_root_mullbW IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component demosaic_root_mulmb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (20 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component demosaic_root_mulncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;



begin
    demosaic_root_urehbi_U20 : component demosaic_root_urehbi
    generic map (
        ID => 1,
        NUM_STAGE => 15,
        din0_WIDTH => 11,
        din1_WIDTH => 3,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_14_fu_373_p1,
        din1 => grp_fu_377_p1,
        ce => grp_fu_377_ce,
        dout => grp_fu_377_p2);

    demosaic_root_mulg8j_U21 : component demosaic_root_mulg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 13,
        din1_WIDTH => 11,
        dout_WIDTH => 24)
    port map (
        din0 => mul_fu_948_p0,
        din1 => mul_fu_948_p1,
        dout => mul_fu_948_p2);

    demosaic_root_mulibs_U22 : component demosaic_root_mulibs
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 9,
        din1_WIDTH => 18,
        dout_WIDTH => 27)
    port map (
        din0 => p_295_fu_957_p0,
        din1 => p_295_fu_957_p1,
        dout => p_295_fu_957_p2);

    demosaic_root_muljbC_U23 : component demosaic_root_muljbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 18,
        dout_WIDTH => 28)
    port map (
        din0 => p_303_fu_964_p0,
        din1 => p_303_fu_964_p1,
        dout => p_303_fu_964_p2);

    demosaic_root_muljbC_U24 : component demosaic_root_muljbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 18,
        dout_WIDTH => 28)
    port map (
        din0 => p_362_fu_971_p0,
        din1 => p_362_fu_971_p1,
        dout => p_362_fu_971_p2);

    demosaic_root_mulkbM_U25 : component demosaic_root_mulkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 18,
        dout_WIDTH => 26)
    port map (
        din0 => p_371_fu_978_p0,
        din1 => p_371_fu_978_p1,
        dout => p_371_fu_978_p2);

    demosaic_root_mullbW_U26 : component demosaic_root_mullbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 27)
    port map (
        din0 => p_s_fu_985_p0,
        din1 => p_s_fu_985_p1,
        dout => p_s_fu_985_p2);

    demosaic_root_mulmb6_U27 : component demosaic_root_mulmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => p_8_fu_992_p0,
        din1 => p_8_fu_992_p1,
        dout => p_8_fu_992_p2);

    demosaic_root_mulncg_U28 : component demosaic_root_mulncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 8,
        dout_WIDTH => 25)
    port map (
        din0 => p_6_fu_999_p0,
        din1 => p_6_fu_999_p1,
        dout => p_6_fu_999_p2);

    demosaic_root_mullbW_U29 : component demosaic_root_mullbW
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 8,
        dout_WIDTH => 27)
    port map (
        din0 => p_19_fu_1006_p0,
        din1 => p_19_fu_1006_p1,
        dout => p_19_fu_1006_p2);

    demosaic_root_mulmb6_U30 : component demosaic_root_mulmb6
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 21,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        din0 => p_20_fu_1013_p0,
        din1 => p_20_fu_1013_p1,
        dout => p_20_fu_1013_p2);

    demosaic_root_mulncg_U31 : component demosaic_root_mulncg
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 8,
        dout_WIDTH => 25)
    port map (
        din0 => p_21_fu_1020_p0,
        din1 => p_21_fu_1020_p1,
        dout => p_21_fu_1020_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((exitcond1_fu_329_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((exitcond_fu_351_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter15 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter1_state6)) then 
                        ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter0;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
                end if; 
            end if;
        end if;
    end process;


    p_228_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_228_reg_268 <= ap_const_lv20_0;
            elsif (((exitcond_fu_351_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_228_reg_268 <= idx_urem_fu_462_p3;
            end if; 
        end if;
    end process;

    p_329_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op81_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_329_fu_178 <= p_demosaic_V_bv_V_dout;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_329_fu_178 <= p_demosaic_window_1_fu_170;
            end if; 
        end if;
    end process;

    p_Val2_7_reg_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_7_reg_314 <= p_demosaic_window_v_reg_244;
            elsif (((exitcond_reg_1061_pp1_iter13_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_Val2_7_reg_314 <= p_demosaic_window_0_1_reg_302_pp1_iter13_reg;
            end if; 
        end if;
    end process;

    p_demosaic_window_0_1_reg_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_demosaic_window_0_1_reg_302 <= p_demosaic_window_0_reg_231;
            elsif (((exitcond_reg_1061_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_demosaic_window_0_1_reg_302 <= ret_v_bv_V_1_reg_290;
            end if; 
        end if;
    end process;

    p_demosaic_window_1_4_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_demosaic_window_1_4_reg_279 <= p_demosaic_window_1_1_reg_206;
            elsif (((exitcond_reg_1061_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_demosaic_window_1_4_reg_279 <= p_demosaic_window_1_5_reg_1089;
            end if; 
        end if;
    end process;

    p_prefill_demosaic_reg_195_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_prefill_demosaic_reg_195 <= ap_const_lv2_0;
            elsif (((exitcond1_fu_329_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                p_prefill_demosaic_reg_195 <= p_prefill_demosaic_1_fu_335_p2;
            end if; 
        end if;
    end process;

    p_s0_v_reg_257_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_s0_v_reg_257 <= ap_const_lv20_0;
            elsif (((exitcond_fu_351_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                p_s0_v_reg_257 <= p_s0_v80_fu_357_p2;
            end if; 
        end if;
    end process;

    ret_v_bv_V_1_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                ret_v_bv_V_1_reg_290 <= ret_v_bv_V_reg_218;
            elsif (((exitcond_reg_1061_pp1_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                ret_v_bv_V_1_reg_290 <= p_demosaic_window_1_4_reg_279;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exitcond1_reg_1033 <= exitcond1_fu_329_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                exitcond_reg_1061 <= exitcond_fu_351_p2;
                exitcond_reg_1061_pp1_iter1_reg <= exitcond_reg_1061;
                p_258_reg_1079_pp1_iter1_reg <= p_258_reg_1079;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_reg_1061_pp1_iter10_reg <= exitcond_reg_1061_pp1_iter9_reg;
                exitcond_reg_1061_pp1_iter11_reg <= exitcond_reg_1061_pp1_iter10_reg;
                exitcond_reg_1061_pp1_iter12_reg <= exitcond_reg_1061_pp1_iter11_reg;
                exitcond_reg_1061_pp1_iter13_reg <= exitcond_reg_1061_pp1_iter12_reg;
                exitcond_reg_1061_pp1_iter2_reg <= exitcond_reg_1061_pp1_iter1_reg;
                exitcond_reg_1061_pp1_iter3_reg <= exitcond_reg_1061_pp1_iter2_reg;
                exitcond_reg_1061_pp1_iter4_reg <= exitcond_reg_1061_pp1_iter3_reg;
                exitcond_reg_1061_pp1_iter5_reg <= exitcond_reg_1061_pp1_iter4_reg;
                exitcond_reg_1061_pp1_iter6_reg <= exitcond_reg_1061_pp1_iter5_reg;
                exitcond_reg_1061_pp1_iter7_reg <= exitcond_reg_1061_pp1_iter6_reg;
                exitcond_reg_1061_pp1_iter8_reg <= exitcond_reg_1061_pp1_iter7_reg;
                exitcond_reg_1061_pp1_iter9_reg <= exitcond_reg_1061_pp1_iter8_reg;
                p_258_reg_1079_pp1_iter10_reg <= p_258_reg_1079_pp1_iter9_reg;
                p_258_reg_1079_pp1_iter11_reg <= p_258_reg_1079_pp1_iter10_reg;
                p_258_reg_1079_pp1_iter12_reg <= p_258_reg_1079_pp1_iter11_reg;
                p_258_reg_1079_pp1_iter13_reg <= p_258_reg_1079_pp1_iter12_reg;
                p_258_reg_1079_pp1_iter14_reg <= p_258_reg_1079_pp1_iter13_reg;
                p_258_reg_1079_pp1_iter2_reg <= p_258_reg_1079_pp1_iter1_reg;
                p_258_reg_1079_pp1_iter3_reg <= p_258_reg_1079_pp1_iter2_reg;
                p_258_reg_1079_pp1_iter4_reg <= p_258_reg_1079_pp1_iter3_reg;
                p_258_reg_1079_pp1_iter5_reg <= p_258_reg_1079_pp1_iter4_reg;
                p_258_reg_1079_pp1_iter6_reg <= p_258_reg_1079_pp1_iter5_reg;
                p_258_reg_1079_pp1_iter7_reg <= p_258_reg_1079_pp1_iter6_reg;
                p_258_reg_1079_pp1_iter8_reg <= p_258_reg_1079_pp1_iter7_reg;
                p_258_reg_1079_pp1_iter9_reg <= p_258_reg_1079_pp1_iter8_reg;
                p_401_reg_1115 <= p_401_fu_937_p2;
                p_demosaic_window_0_1_reg_302_pp1_iter10_reg <= p_demosaic_window_0_1_reg_302_pp1_iter9_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter11_reg <= p_demosaic_window_0_1_reg_302_pp1_iter10_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter12_reg <= p_demosaic_window_0_1_reg_302_pp1_iter11_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter13_reg <= p_demosaic_window_0_1_reg_302_pp1_iter12_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter2_reg <= p_demosaic_window_0_1_reg_302;
                p_demosaic_window_0_1_reg_302_pp1_iter3_reg <= p_demosaic_window_0_1_reg_302_pp1_iter2_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter4_reg <= p_demosaic_window_0_1_reg_302_pp1_iter3_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter5_reg <= p_demosaic_window_0_1_reg_302_pp1_iter4_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter6_reg <= p_demosaic_window_0_1_reg_302_pp1_iter5_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter7_reg <= p_demosaic_window_0_1_reg_302_pp1_iter6_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter8_reg <= p_demosaic_window_0_1_reg_302_pp1_iter7_reg;
                p_demosaic_window_0_1_reg_302_pp1_iter9_reg <= p_demosaic_window_0_1_reg_302_pp1_iter8_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter10_reg <= p_demosaic_window_1_4_reg_279_pp1_iter9_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter11_reg <= p_demosaic_window_1_4_reg_279_pp1_iter10_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter12_reg <= p_demosaic_window_1_4_reg_279_pp1_iter11_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter13_reg <= p_demosaic_window_1_4_reg_279_pp1_iter12_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter2_reg <= p_demosaic_window_1_4_reg_279;
                p_demosaic_window_1_4_reg_279_pp1_iter3_reg <= p_demosaic_window_1_4_reg_279_pp1_iter2_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter4_reg <= p_demosaic_window_1_4_reg_279_pp1_iter3_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter5_reg <= p_demosaic_window_1_4_reg_279_pp1_iter4_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter6_reg <= p_demosaic_window_1_4_reg_279_pp1_iter5_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter7_reg <= p_demosaic_window_1_4_reg_279_pp1_iter6_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter8_reg <= p_demosaic_window_1_4_reg_279_pp1_iter7_reg;
                p_demosaic_window_1_4_reg_279_pp1_iter9_reg <= p_demosaic_window_1_4_reg_279_pp1_iter8_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter10_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter9_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter11_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter10_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter12_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter11_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter13_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter12_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter2_reg <= p_demosaic_window_1_5_reg_1089;
                p_demosaic_window_1_5_reg_1089_pp1_iter3_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter2_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter4_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter3_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter5_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter4_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter6_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter5_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter7_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter6_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter8_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter7_reg;
                p_demosaic_window_1_5_reg_1089_pp1_iter9_reg <= p_demosaic_window_1_5_reg_1089_pp1_iter8_reg;
                p_demosaic_window_1_6_reg_1095 <= p_329_fu_178;
                p_demosaic_window_1_6_reg_1095_pp1_iter10_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter9_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter11_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter10_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter12_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter11_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter13_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter12_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter3_reg <= p_demosaic_window_1_6_reg_1095;
                p_demosaic_window_1_6_reg_1095_pp1_iter4_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter3_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter5_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter4_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter6_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter5_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter7_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter6_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter8_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter7_reg;
                p_demosaic_window_1_6_reg_1095_pp1_iter9_reg <= p_demosaic_window_1_6_reg_1095_pp1_iter8_reg;
                p_odata_window_vs_s_reg_1110 <= p_odata_window_vs_s_fu_929_p3;
                ret_v_bv_V_1_reg_290_pp1_iter10_reg <= ret_v_bv_V_1_reg_290_pp1_iter9_reg;
                ret_v_bv_V_1_reg_290_pp1_iter11_reg <= ret_v_bv_V_1_reg_290_pp1_iter10_reg;
                ret_v_bv_V_1_reg_290_pp1_iter12_reg <= ret_v_bv_V_1_reg_290_pp1_iter11_reg;
                ret_v_bv_V_1_reg_290_pp1_iter13_reg <= ret_v_bv_V_1_reg_290_pp1_iter12_reg;
                ret_v_bv_V_1_reg_290_pp1_iter2_reg <= ret_v_bv_V_1_reg_290;
                ret_v_bv_V_1_reg_290_pp1_iter3_reg <= ret_v_bv_V_1_reg_290_pp1_iter2_reg;
                ret_v_bv_V_1_reg_290_pp1_iter4_reg <= ret_v_bv_V_1_reg_290_pp1_iter3_reg;
                ret_v_bv_V_1_reg_290_pp1_iter5_reg <= ret_v_bv_V_1_reg_290_pp1_iter4_reg;
                ret_v_bv_V_1_reg_290_pp1_iter6_reg <= ret_v_bv_V_1_reg_290_pp1_iter5_reg;
                ret_v_bv_V_1_reg_290_pp1_iter7_reg <= ret_v_bv_V_1_reg_290_pp1_iter6_reg;
                ret_v_bv_V_1_reg_290_pp1_iter8_reg <= ret_v_bv_V_1_reg_290_pp1_iter7_reg;
                ret_v_bv_V_1_reg_290_pp1_iter9_reg <= ret_v_bv_V_1_reg_290_pp1_iter8_reg;
                tmp_23_reg_1100 <= p_313_fu_553_p2(19 downto 10);
                tmp_25_reg_1105 <= p_374_fu_629_p2(19 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_fu_351_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_221_reg_1070 <= p_221_fu_363_p2;
                p_258_reg_1079 <= p_258_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_Val2_s_fu_174 <= p_odata_window_vs_s_fu_929_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond1_reg_1033 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_demosaic_window_0_reg_231 <= ret_v_bv_V_reg_218;
                p_demosaic_window_1_1_reg_206 <= p_demosaic_window_1_fu_170;
                p_demosaic_window_1_fu_170 <= p_demosaic_V_bv_V_dout;
                p_demosaic_window_v_reg_244 <= p_demosaic_window_0_reg_231;
                ret_v_bv_V_reg_218 <= p_demosaic_window_1_1_reg_206;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                p_demosaic_window_1_5_reg_1089 <= p_329_fu_178;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter15, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter14)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) and not(((ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state21 <= ap_CS_fsm(4);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(p_demosaic_V_bv_V_empty_n, ap_enable_reg_pp0_iter1, exitcond1_reg_1033)
    begin
                ap_block_pp0_stage0_11001 <= ((exitcond1_reg_1033 = ap_const_lv1_0) and (p_demosaic_V_bv_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_demosaic_V_bv_V_empty_n, ap_enable_reg_pp0_iter1, exitcond1_reg_1033)
    begin
                ap_block_pp0_stage0_subdone <= ((exitcond1_reg_1033 = ap_const_lv1_0) and (p_demosaic_V_bv_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_demosaic_V_bv_V_empty_n, p_odata_V_bv_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter15, ap_predicate_op81_read_state6, ap_predicate_op187_write_state20)
    begin
                ap_block_pp1_stage0_01001 <= (((p_odata_V_bv_V_full_n = ap_const_logic_0) and (ap_predicate_op187_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1)) or ((p_demosaic_V_bv_V_empty_n = ap_const_logic_0) and (ap_predicate_op81_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_demosaic_V_bv_V_empty_n, p_odata_V_bv_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter15, ap_predicate_op81_read_state6, ap_predicate_op187_write_state20)
    begin
                ap_block_pp1_stage0_11001 <= (((p_odata_V_bv_V_full_n = ap_const_logic_0) and (ap_predicate_op187_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1)) or ((p_demosaic_V_bv_V_empty_n = ap_const_logic_0) and (ap_predicate_op81_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_demosaic_V_bv_V_empty_n, p_odata_V_bv_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter15, ap_predicate_op81_read_state6, ap_predicate_op187_write_state20)
    begin
                ap_block_pp1_stage0_subdone <= (((p_odata_V_bv_V_full_n = ap_const_logic_0) and (ap_predicate_op187_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1)) or ((p_demosaic_V_bv_V_empty_n = ap_const_logic_0) and (ap_predicate_op81_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp1_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state20_pp1_stage0_iter15_assign_proc : process(p_odata_V_bv_V_full_n, ap_predicate_op187_write_state20)
    begin
                ap_block_state20_pp1_stage0_iter15 <= ((p_odata_V_bv_V_full_n = ap_const_logic_0) and (ap_predicate_op187_write_state20 = ap_const_boolean_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(p_demosaic_V_bv_V_empty_n, exitcond1_reg_1033)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((exitcond1_reg_1033 = ap_const_lv1_0) and (p_demosaic_V_bv_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp1_stage0_iter1_assign_proc : process(p_demosaic_V_bv_V_empty_n, ap_predicate_op81_read_state6)
    begin
                ap_block_state6_pp1_stage0_iter1 <= ((p_demosaic_V_bv_V_empty_n = ap_const_logic_0) and (ap_predicate_op81_read_state6 = ap_const_boolean_1));
    end process;

        ap_block_state7_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp1_exit_iter1_state6_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_condition_pp1_exit_iter1_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter1_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter15, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter9, ap_enable_reg_pp1_iter10, ap_enable_reg_pp1_iter11, ap_enable_reg_pp1_iter12, ap_enable_reg_pp1_iter13, ap_enable_reg_pp1_iter14)
    begin
        if (((ap_enable_reg_pp1_iter15 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_0) and (ap_enable_reg_pp1_iter13 = ap_const_logic_0) and (ap_enable_reg_pp1_iter12 = ap_const_logic_0) and (ap_enable_reg_pp1_iter11 = ap_const_logic_0) and (ap_enable_reg_pp1_iter10 = ap_const_logic_0) and (ap_enable_reg_pp1_iter9 = ap_const_logic_0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_p_Val2_7_phi_fu_317_p4_assign_proc : process(ap_block_pp1_stage0, p_demosaic_window_0_1_reg_302_pp1_iter13_reg, p_Val2_7_reg_314, exitcond_reg_1061_pp1_iter13_reg, ap_enable_reg_pp1_iter14)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_reg_1061_pp1_iter13_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter14 = ap_const_logic_1))) then 
            ap_phi_mux_p_Val2_7_phi_fu_317_p4 <= p_demosaic_window_0_1_reg_302_pp1_iter13_reg;
        else 
            ap_phi_mux_p_Val2_7_phi_fu_317_p4 <= p_Val2_7_reg_314;
        end if; 
    end process;


    ap_predicate_op187_write_state20_assign_proc : process(p_401_reg_1115, p_258_reg_1079_pp1_iter14_reg)
    begin
                ap_predicate_op187_write_state20 <= ((p_401_reg_1115 = ap_const_lv1_1) and (p_258_reg_1079_pp1_iter14_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op81_read_state6_assign_proc : process(exitcond_reg_1061, p_221_reg_1070)
    begin
                ap_predicate_op81_read_state6 <= ((p_221_reg_1070 = ap_const_lv1_1) and (exitcond_reg_1061 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    exitcond1_fu_329_p2 <= "1" when (p_prefill_demosaic_reg_195 = ap_const_lv2_3) else "0";
    exitcond_fu_351_p2 <= "1" when (p_s0_v_reg_257 = ap_const_lv20_E1000) else "0";

    grp_fu_377_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_377_ce <= ap_const_logic_1;
        else 
            grp_fu_377_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_377_p1 <= ap_const_lv11_3(3 - 1 downto 0);
    idx_urem_fu_462_p3 <= 
        next_urem_fu_450_p2 when (tmp_27_fu_456_p2(0) = '1') else 
        ap_const_lv20_0;
    mul_fu_948_p0 <= ap_const_lv24_AAB(13 - 1 downto 0);
    mul_fu_948_p1 <= mul_fu_948_p10(11 - 1 downto 0);
    mul_fu_948_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_373_p1),24));
    next_urem_fu_450_p2 <= std_logic_vector(unsigned(p_228_reg_268) + unsigned(ap_const_lv20_1));
    p_19_fu_1006_p0 <= ap_const_lv27_4C800(20 - 1 downto 0);
    p_19_fu_1006_p1 <= p_19_fu_1006_p10(8 - 1 downto 0);
    p_19_fu_1006_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_demosaic_window_1_4_reg_279_pp1_iter13_reg),27));
    p_20_fu_1013_p0 <= ap_const_lv28_96000(21 - 1 downto 0);
    p_20_fu_1013_p1 <= p_20_fu_1013_p10(8 - 1 downto 0);
    p_20_fu_1013_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_demosaic_window_1_5_reg_1089_pp1_iter13_reg),28));
    p_21_fu_1020_p0 <= ap_const_lv25_1D400(18 - 1 downto 0);
    p_21_fu_1020_p1 <= p_21_fu_1020_p10(8 - 1 downto 0);
    p_21_fu_1020_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_demosaic_window_1_6_reg_1095_pp1_iter13_reg),25));
    p_221_fu_363_p2 <= "1" when (unsigned(p_s0_v_reg_257) < unsigned(ap_const_lv20_E0FFD)) else "0";
    p_248_fu_652_p3 <= grp_fu_377_p2(1 downto 1);
    p_249_cast1_fu_396_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_387_p4),12));
    p_251_fu_430_p2 <= std_logic_vector(unsigned(tmp_2_fu_424_p2) + unsigned(tmp_13_fu_369_p1));
    p_258_fu_444_p2 <= (tmp_22_fu_436_p3 xor tmp_21_fu_400_p3);
    p_260_2_fu_665_p2 <= (p_260_fu_660_p2 and p_248_fu_652_p3);
    p_260_fu_660_p2 <= (p_258_reg_1079_pp1_iter13_reg xor ap_const_lv1_1);
    p_269_cast_fu_684_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_675_p4),18));
    p_276_cast_fu_692_p4 <= p_8_fu_992_p2(27 downto 10);
    p_284_cast_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_705_p4),18));
    p_285_fu_724_p2 <= std_logic_vector(unsigned(tmp1_fu_718_p2) + unsigned(p_269_cast_fu_684_p1));
    p_289_fu_746_p3 <= 
        tmp_fu_736_p4 when (tmp_i_fu_730_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_292_fu_481_p3 <= (ap_phi_mux_p_Val2_7_phi_fu_317_p4 & ap_const_lv10_0);
    p_295_fu_957_p0 <= ap_const_lv27_7FFFF54(9 - 1 downto 0);
    p_295_fu_957_p1 <= p_295_fu_957_p10(18 - 1 downto 0);
    p_295_fu_957_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_292_fu_481_p3),27));
    p_300_fu_506_p3 <= (p_demosaic_window_0_1_reg_302_pp1_iter12_reg & ap_const_lv10_0);
    p_301_cast_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_300_fu_506_p3),28));
    p_303_fu_964_p0 <= ap_const_lv28_FFFFEAD(10 - 1 downto 0);
    p_303_fu_964_p1 <= p_301_cast_fu_514_p1(18 - 1 downto 0);
    p_308_cast_cast_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_308_fu_531_p3),19));
    p_308_fu_531_p3 <= (ret_v_bv_V_1_reg_290_pp1_iter12_reg & ap_const_lv9_0);
    p_313_fu_553_p2 <= std_logic_vector(signed(tmp2_cast_fu_549_p1) + signed(p_cast6_fu_527_p1));
    p_315_fu_757_p2 <= std_logic_vector(unsigned(ap_const_lv11_80) + unsigned(tmp_14_cast_fu_754_p1));
    p_316_fu_769_p3 <= 
        p_315_fu_757_p2 when (tmp_i1_fu_763_p2(0) = '1') else 
        ap_const_lv11_FF;
    p_318_fu_787_p3 <= 
        tmp_24_fu_783_p1 when (tmp_i2_fu_777_p2(0) = '1') else 
        ap_const_lv8_0;
    p_328_cast_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_fu_799_p4),18));
    p_336_cast_fu_815_p4 <= p_20_fu_1013_p2(27 downto 10);
    p_345_cast_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_827_p4),18));
    p_346_fu_846_p2 <= std_logic_vector(unsigned(tmp3_fu_840_p2) + unsigned(p_328_cast_fu_808_p1));
    p_350_fu_868_p3 <= 
        tmp_5_fu_858_p4 when (tmp_i3_fu_852_p2(0) = '1') else 
        ap_const_lv8_FF;
    p_353_cast_cast_fu_577_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_353_fu_569_p3),19));
    p_353_fu_569_p3 <= (ap_phi_mux_p_Val2_7_phi_fu_317_p4 & ap_const_lv9_0);
    p_362_fu_971_p0 <= ap_const_lv28_FFFFE54(10 - 1 downto 0);
    p_362_fu_971_p1 <= p_301_cast_fu_514_p1(18 - 1 downto 0);
    p_368_fu_594_p3 <= (ret_v_bv_V_1_reg_290_pp1_iter12_reg & ap_const_lv10_0);
    p_371_fu_978_p0 <= ap_const_lv26_3FFFFAD(8 - 1 downto 0);
    p_371_fu_978_p1 <= p_371_fu_978_p10(18 - 1 downto 0);
    p_371_fu_978_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_368_fu_594_p3),26));
    p_374_fu_629_p2 <= std_logic_vector(signed(tmp4_cast_fu_625_p1) + signed(p_cast5_fu_590_p1));
    p_376_fu_879_p2 <= std_logic_vector(unsigned(ap_const_lv11_80) + unsigned(tmp_20_cast_fu_876_p1));
    p_377_fu_891_p3 <= 
        p_376_fu_879_p2 when (tmp_i4_fu_885_p2(0) = '1') else 
        ap_const_lv11_FF;
    p_379_fu_909_p3 <= 
        tmp_26_fu_905_p1 when (tmp_i5_fu_899_p2(0) = '1') else 
        ap_const_lv8_0;
    p_401_fu_937_p2 <= "1" when (tmp_19_fu_648_p1 = ap_const_lv3_2) else "0";
    p_6_fu_999_p0 <= ap_const_lv25_1D400(18 - 1 downto 0);
    p_6_fu_999_p1 <= p_6_fu_999_p10(8 - 1 downto 0);
    p_6_fu_999_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_v_bv_V_1_reg_290_pp1_iter13_reg),25));
    p_8_fu_992_p0 <= ap_const_lv28_96000(21 - 1 downto 0);
    p_8_fu_992_p1 <= p_8_fu_992_p10(8 - 1 downto 0);
    p_8_fu_992_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_demosaic_window_0_1_reg_302_pp1_iter13_reg),28));
    p_Result_s_fu_917_p5 <= (((p_379_fu_909_p3 & p_350_fu_868_p3) & p_318_fu_787_p3) & p_289_fu_746_p3);
        p_cast5_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_12_fu_581_p4),20));

        p_cast6_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_8_fu_518_p4),20));

        p_cast7_fu_502_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_493_p4),19));

        p_cast_fu_615_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_15_fu_606_p4),19));


    p_demosaic_V_bv_V_blk_n_assign_proc : process(p_demosaic_V_bv_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond1_reg_1033, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, exitcond_reg_1061, p_221_reg_1070)
    begin
        if ((((p_221_reg_1070 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (exitcond_reg_1061 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((exitcond1_reg_1033 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            p_demosaic_V_bv_V_blk_n <= p_demosaic_V_bv_V_empty_n;
        else 
            p_demosaic_V_bv_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_demosaic_V_bv_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond1_reg_1033, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op81_read_state6, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op81_read_state6 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((exitcond1_reg_1033 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            p_demosaic_V_bv_V_read <= ap_const_logic_1;
        else 
            p_demosaic_V_bv_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_odata_V_bv_V_blk_n_assign_proc : process(p_odata_V_bv_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter15, p_401_reg_1115, p_258_reg_1079_pp1_iter14_reg)
    begin
        if (((p_401_reg_1115 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (p_258_reg_1079_pp1_iter14_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1))) then 
            p_odata_V_bv_V_blk_n <= p_odata_V_bv_V_full_n;
        else 
            p_odata_V_bv_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_odata_V_bv_V_din <= p_odata_window_vs_s_reg_1110;

    p_odata_V_bv_V_write_assign_proc : process(ap_enable_reg_pp1_iter15, ap_predicate_op187_write_state20, ap_block_pp1_stage0_11001)
    begin
        if (((ap_predicate_op187_write_state20 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            p_odata_V_bv_V_write <= ap_const_logic_1;
        else 
            p_odata_V_bv_V_write <= ap_const_logic_0;
        end if; 
    end process;

    p_odata_window_vs_s_fu_929_p3 <= 
        p_Result_s_fu_917_p5 when (p_260_2_fu_665_p2(0) = '1') else 
        p_Val2_s_fu_174;
    p_prefill_demosaic_1_fu_335_p2 <= std_logic_vector(unsigned(p_prefill_demosaic_reg_195) + unsigned(ap_const_lv2_1));
    p_s0_v80_fu_357_p2 <= std_logic_vector(unsigned(p_s0_v_reg_257) + unsigned(ap_const_lv20_1));
    p_s_fu_985_p0 <= ap_const_lv27_4C800(20 - 1 downto 0);
    p_s_fu_985_p1 <= p_s_fu_985_p10(8 - 1 downto 0);
    p_s_fu_985_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_7_reg_314),27));
    p_shl_fu_416_p3 <= (tmp_7_fu_407_p4 & ap_const_lv2_0);
    tmp1_fu_718_p2 <= std_logic_vector(unsigned(p_276_cast_fu_692_p4) + unsigned(p_284_cast_fu_714_p1));
        tmp2_cast_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp2_fu_543_p2),20));

    tmp2_fu_543_p2 <= std_logic_vector(signed(p_cast7_fu_502_p1) + signed(p_308_cast_cast_fu_539_p1));
    tmp3_fu_840_p2 <= std_logic_vector(unsigned(p_336_cast_fu_815_p4) + unsigned(p_345_cast_fu_836_p1));
        tmp4_cast_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp4_fu_619_p2),20));

    tmp4_fu_619_p2 <= std_logic_vector(unsigned(p_353_cast_cast_fu_577_p1) + unsigned(p_cast_fu_615_p1));
    tmp_10_fu_799_p4 <= p_19_fu_1006_p2(26 downto 10);
    tmp_11_fu_827_p4 <= p_21_fu_1020_p2(24 downto 10);
    tmp_12_fu_581_p4 <= p_362_fu_971_p2(27 downto 10);
    tmp_13_fu_369_p1 <= p_228_reg_268(12 - 1 downto 0);
        tmp_14_cast_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_23_reg_1100),11));

    tmp_14_fu_373_p1 <= p_228_reg_268(11 - 1 downto 0);
    tmp_15_fu_606_p4 <= p_371_fu_978_p2(25 downto 10);
    tmp_19_fu_648_p1 <= grp_fu_377_p2(3 - 1 downto 0);
    tmp_1_fu_493_p4 <= p_295_fu_957_p2(26 downto 10);
        tmp_20_cast_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_25_reg_1105),11));

    tmp_21_fu_400_p3 <= mul_fu_948_p2(13 downto 13);
    tmp_22_fu_436_p3 <= p_251_fu_430_p2(11 downto 11);
    tmp_24_fu_783_p1 <= p_316_fu_769_p3(8 - 1 downto 0);
    tmp_26_fu_905_p1 <= p_377_fu_891_p3(8 - 1 downto 0);
    tmp_27_fu_456_p2 <= "1" when (unsigned(next_urem_fu_450_p2) < unsigned(ap_const_lv20_780)) else "0";
    tmp_2_fu_424_p2 <= std_logic_vector(unsigned(p_249_cast1_fu_396_p1) - unsigned(p_shl_fu_416_p3));
    tmp_5_fu_858_p4 <= p_346_fu_846_p2(17 downto 10);
    tmp_6_fu_387_p4 <= mul_fu_948_p2(23 downto 13);
    tmp_7_fu_407_p4 <= mul_fu_948_p2(22 downto 13);
    tmp_8_fu_518_p4 <= p_303_fu_964_p2(27 downto 10);
    tmp_9_fu_675_p4 <= p_s_fu_985_p2(26 downto 10);
    tmp_fu_736_p4 <= p_285_fu_724_p2(17 downto 10);
    tmp_i1_fu_763_p2 <= "1" when (signed(p_315_fu_757_p2) < signed(ap_const_lv11_FF)) else "0";
    tmp_i2_fu_777_p2 <= "1" when (signed(p_316_fu_769_p3) > signed(ap_const_lv11_0)) else "0";
    tmp_i3_fu_852_p2 <= "1" when (unsigned(p_346_fu_846_p2) < unsigned(ap_const_lv18_3FC00)) else "0";
    tmp_i4_fu_885_p2 <= "1" when (signed(p_376_fu_879_p2) < signed(ap_const_lv11_FF)) else "0";
    tmp_i5_fu_899_p2 <= "1" when (signed(p_377_fu_891_p3) > signed(ap_const_lv11_0)) else "0";
    tmp_i_fu_730_p2 <= "1" when (unsigned(p_285_fu_724_p2) < unsigned(ap_const_lv18_3FC00)) else "0";
    tmp_s_fu_705_p4 <= p_6_fu_999_p2(24 downto 10);
end behav;
